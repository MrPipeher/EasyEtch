{"version":3,"file":"static/js/main.0a67c988.js","mappings":"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","sources":["src/components/FirebaseConfig.js","src/components/ServerURLContext.js","src/components/ServerContext.js","src/screens/AuthScreens/SignInScreen.js","src/screens/AuthScreens/SignUpScreen.js","src/screens/AuthScreens/WelcomeScreen.js","src/components/HostHomeProfileContext.js","src/components/TherapistProfileContext.js","src/screens/HostHomeScreens/CreateHostHomeProfileScreen.js","src/screens/HostHomeScreens/GenerateHostHomeNotesScreen.js","src/screens/HostHomeScreens/ViewHostHomeProfileScreen.js","src/screens/TherapistScreens/CreateTherapistProfileScreen.js","src/components/DispositionContainer.js","src/screens/TherapistScreens/GenerateTherapistNotesScreen.js","src/screens/TherapistScreens/ViewTherapistProfileScreen.js","src/screens/CommonScreens/SettingsScreen.js","src/screens/CommonScreens/PurchaseScreen.js","src/screens/CommonScreens/StripeCheckoutScreen.js","src/screens/MainNavigator.js","src/screens/RootNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBQuUaG_jhfDZpKTdEX2bDQi184lRiBFzg\",\r\n    authDomain: \"easyetch-2764f.firebaseapp.com\",\r\n    projectId: \"easyetch-2764f\",\r\n    storageBucket: \"easyetch-2764f.appspot.com\",\r\n    messagingSenderId: \"429626063303\",\r\n    appId: \"1:429626063303:web:e163bac12113c7b43c01e2\"\r\n  };\r\n\r\n// initialize Firebase App\r\nconst FIREBASE_APP = initializeApp(firebaseConfig);\r\nconst FIREBASE_AUTH = getAuth(FIREBASE_APP);\r\n\r\nexport { FIREBASE_APP, FIREBASE_AUTH};","import React, { createContext, useContext } from 'react';\r\n\r\nconst ServerURLContext = createContext();\r\n\r\nexport const useServerURL = () => {\r\n  return useContext(ServerURLContext);\r\n};\r\n\r\nexport const ServerURLProvider = ({ children, serverURL }) => {\r\n  return (\r\n    <ServerURLContext.Provider value={serverURL}>\r\n      {children}\r\n    </ServerURLContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst ServerContext = createContext();\r\n\r\nexport const useServerContext = () => {\r\n  return useContext(ServerContext);\r\n};\r\n\r\nexport const ServerProvider = ({ children, profileOwner }) => {\r\n  const [credits, setCredits] = useState(null);\r\n  const [accountType, setAccountType] = useState(null);\r\n  const serverURL = useServerURL();\r\n\r\n  const fetchAccountType = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/getAccountType?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      setAccountType(data.accountType);\r\n    } catch (error) {\r\n      console.error('Error fetching account type:', error);\r\n    }\r\n  };\r\n\r\n  const changeAccountType = async (profileOwner, newAccountType) => {\r\n\r\n    //Prevent Spam\r\n    if (newAccountType == accountType) return;\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/changeAccountType`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          newAccountType: newAccountType\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      setAccountType(data.updatedAccountType);\r\n    } catch (error) {\r\n      console.error('Error changing account type:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCredits = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/credits?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      setCredits(data);\r\n    } catch (error) {\r\n      console.error('Error fetching credits:', error);\r\n    }\r\n  };\r\n\r\n  const reloadCredits = async () => {\r\n    try {\r\n      const creditsData = await fetchCredits(profileOwner);\r\n      setCredits(creditsData);\r\n    } catch (error) {\r\n      console.error('Error reloading credits:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchAccountType(profileOwner);\r\n        await fetchCredits(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching account data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <ServerContext.Provider \r\n      value={{ \r\n          serverURL,\r\n          profileOwner,\r\n          credits,\r\n          setCredits,\r\n          reloadCredits,\r\n          accountType,\r\n          changeAccountType\r\n        }}>\r\n      {children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\n\r\nconst SignInScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSignIn = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (error) {\r\n      console.error('Error signing in:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToWelcome = () => {\r\n    navigation.navigate('Welcome');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Sign In</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n        value={email}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        onChangeText={(text) => setPassword(text)}\r\n        value={password}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Sign In\" onPress={handleSignIn} />\r\n      <Button title=\"Go Back\" onPress={navigateToWelcome} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    marginVertical: 10,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default SignInScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\n\r\nconst SignUpScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('Host Home'); // Default value is 'Host Home'\r\n  const serverURL = useServerURL();\r\n\r\n  const handleSignup = async () => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password, userType }),\r\n      });\r\n\r\n      if (response) {\r\n        navigateToWelcome();\r\n      } else {\r\n        console.error('Error signing up on server:', errorData.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToWelcome = () => {\r\n    navigation.navigate('Welcome');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Sign Up</Text>\r\n      <Picker\r\n        style={styles.picker}\r\n        selectedValue={userType}\r\n        onValueChange={(itemValue) => setUserType(itemValue)}\r\n      >\r\n        <Picker.Item label=\"Host Home\" value=\"Host Home\" />\r\n        <Picker.Item label=\"Therapist\" value=\"Therapist\" />\r\n      </Picker>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n        value={email}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        onChangeText={(text) => setPassword(text)}\r\n        value={password}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Sign Up\" onPress={handleSignup} />\r\n      <Button title=\"Go Back\" onPress={navigateToWelcome} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  picker: {\r\n    width: '80%',\r\n    marginVertical: 10,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    marginVertical: 10,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default SignUpScreen;\r\n","import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst WelcomeScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const navigateToSignUp = () => {\r\n    navigation.navigate('SignUp');\r\n  };\r\n\r\n  const navigateToSignIn = () => {\r\n    navigation.navigate('SignIn');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Welcome to Our App!</Text>\r\n      <View style={styles.buttonContainer}>\r\n        <Button title=\"Sign Up\" onPress={navigateToSignUp} />\r\n        <Button title=\"Sign In\" onPress={navigateToSignIn} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default WelcomeScreen;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst HostHomeProfileContext = createContext();\r\n\r\nexport const useHostHomeProfileContext = () => {\r\n  return useContext(HostHomeProfileContext);\r\n};\r\n\r\nexport const HostHomeProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [note, setNote] = useState(null);\r\n\r\n  const fetchProfiles = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/profiles?profileOwner=${profileOwner}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createProfile = async (newProfileData) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/createprofile`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner,\r\n          ...newProfileData,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Profile created successfully:', data);\r\n        setProfiles([...profiles, data]);\r\n        setSelectedProfile(data);\r\n      } else {\r\n        console.error('Error creating profile:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating profile:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/updateprofile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: updatedProfile.profileId,\r\n          updatedProfileData: updatedProfile\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile updated successfully!');\r\n        const updatedProfiles = profiles.map(profile =>\r\n          profile.profileId === updatedProfile.profileId ? updatedProfile : profile\r\n        );\r\n        setProfiles(updatedProfiles);\r\n        setSelectedProfile(updatedProfile);\r\n      } else {\r\n        console.error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProfile = async (profileId) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/deleteprofile`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: profileId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile deleted successfully!');\r\n        const updatedProfiles = profiles.filter(profile => profile.profileId !== profileId);\r\n        setProfiles(updatedProfiles);\r\n        if (selectedProfile && selectedProfile.profileId === profileId) {\r\n          setSelectedProfile(updatedProfiles.length > 0 ? updatedProfiles[0] : null);\r\n        }\r\n      } else {\r\n        console.error('Failed to delete profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const profilesData = await fetchProfiles(profileOwner);\r\n        setProfiles(profilesData);\r\n        if (profilesData.length > 0) {\r\n          setSelectedProfile(profilesData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profiles:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <HostHomeProfileContext.Provider \r\n      value={{ \r\n          profileOwner,\r\n          profiles,\r\n          createProfile,\r\n          updateProfile,\r\n          deleteProfile,\r\n          selectedProfile,\r\n          setSelectedProfile,\r\n          note,\r\n          setNote,\r\n        }}>\r\n      {children}\r\n    </HostHomeProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst TherapistProfileContext = createContext();\r\n\r\nexport const useTherapistProfileContext = () => {\r\n  return useContext(TherapistProfileContext);\r\n};\r\n\r\nexport const TherapistProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [note, setNote] = useState(null);\r\n\r\n  const fetchProfiles = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/profiles?profileOwner=${profileOwner}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createProfile = async (newProfileData) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/createprofile`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner,\r\n          ...newProfileData,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setProfiles([...profiles, data]);\r\n        setSelectedProfile(data);\r\n      } else {\r\n        console.error('Error creating profile:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating profile:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/updateprofile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: updatedProfile.profileId,\r\n          updatedProfileData: updatedProfile\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile updated successfully!');\r\n        const updatedProfiles = profiles.map(profile =>\r\n          profile.profileId === updatedProfile.profileId ? updatedProfile : profile\r\n        );\r\n        setProfiles(updatedProfiles);\r\n        setSelectedProfile(updatedProfile);\r\n      } else {\r\n        console.error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProfile = async (profileId) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/deleteprofile`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: profileId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile deleted successfully!');\r\n        const updatedProfiles = profiles.filter(profile => profile.profileId !== profileId);\r\n        setProfiles(updatedProfiles);\r\n        if (selectedProfile && selectedProfile.profileId === profileId) {\r\n          setSelectedProfile(updatedProfiles.length > 0 ? updatedProfiles[0] : null);\r\n        }\r\n      } else {\r\n        console.error('Failed to delete profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const profilesData = await fetchProfiles(profileOwner);\r\n        setProfiles(profilesData);\r\n        if (profilesData.length > 0) {\r\n          setSelectedProfile(profilesData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profiles:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <TherapistProfileContext.Provider \r\n      value={{ \r\n          profileOwner,\r\n          profiles,\r\n          createProfile,\r\n          updateProfile,\r\n          deleteProfile,\r\n          selectedProfile,\r\n          setSelectedProfile,\r\n          note,\r\n          setNote,\r\n        }}>\r\n      {children}\r\n    </TherapistProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Button, FlatList } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\n\r\nconst CreateHostHomeProfileScreen = () => {\r\n  const { createProfile } = useHostHomeProfileContext();\r\n  const [profileName, setProfileName] = useState('');\r\n  const [profileGender, setProfileGender] = useState('male');\r\n  const [profileGoals, setProfileGoals] = useState('');\r\n  const [morningMedication, setMorningMedication] = useState(false);\r\n  const [afternoonMedication, setAfternoonMedication] = useState(false);\r\n  const [nightMedication, setNightMedication] = useState(false);\r\n  const [activity, setActivity] = useState('');\r\n  const [activities, setActivities] = useState([]);\r\n\r\n  const handleProfileCreation = async () => {\r\n    if (!profileName.trim() || !profileGender.trim() || !profileGoals.trim()) {\r\n      console.error('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    const newProfileData = {\r\n      profileName,\r\n      profileGender,\r\n      profileGoals,\r\n      morningMedication,\r\n      afternoonMedication,\r\n      nightMedication,\r\n      activities,\r\n    };\r\n\r\n    try {\r\n      await createProfile(newProfileData);\r\n\r\n      // Reset Fields\r\n      setProfileName('');\r\n      setProfileGender('male');\r\n      setProfileGoals('');\r\n      setMorningMedication(false);\r\n      setAfternoonMedication(false);\r\n      setNightMedication(false);\r\n      setActivities([]);\r\n\r\n    } catch (error) {\r\n      console.log('Error creating profile:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (activity.trim()) {\r\n      setActivities(prevActivities => [...prevActivities, activity]);\r\n      setActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (index) => {\r\n    setActivities(prevActivities => prevActivities.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleGenderToggle = () => {\r\n    setProfileGender(prevGender => (prevGender === 'male' ? 'female' : 'male'));\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput\r\n        placeholder=\"Profile Name\"\r\n        value={profileName}\r\n        onChangeText={text => setProfileName(text)}\r\n      />\r\n      <TouchableOpacity onPress={handleGenderToggle}>\r\n        <Text>Gender: {profileGender}</Text>\r\n      </TouchableOpacity>\r\n      <TextInput\r\n        placeholder=\"Profile Goals\"\r\n        value={profileGoals}\r\n        onChangeText={text => setProfileGoals(text)}\r\n      />\r\n      <View>\r\n        <Text>Medications:</Text>\r\n        <TouchableOpacity onPress={() => setMorningMedication(!morningMedication)}>\r\n          <Text>Morning: {morningMedication ? 'Yes' : 'No'}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setAfternoonMedication(!afternoonMedication)}>\r\n          <Text>Afternoon: {afternoonMedication ? 'Yes' : 'No'}</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setNightMedication(!nightMedication)}>\r\n          <Text>Night: {nightMedication ? 'Yes' : 'No'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n          placeholder=\"Add Activity\"\r\n          value={activity}\r\n          onChangeText={text => setActivity(text)}\r\n        />\r\n        <Button title=\"Add Activity\" onPress={handleAddActivity} />\r\n        <FlatList\r\n          data={activities}\r\n          renderItem={({ item, index }) => (\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n              <Text>{item}</Text>\r\n              <TouchableOpacity onPress={() => handleDeleteActivity(index)}>\r\n                <Text>Delete</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </View>\r\n      <Button title=\"Create\" onPress={handleProfileCreation}></Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CreateHostHomeProfileScreen;\r\n","import { View, Text, Button, FlatList, ScrollView} from 'react-native';\r\nimport React, { useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { useServerContext } from '../../components/ServerContext';\r\n\r\nconst GenerateHostHomeNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { profiles, selectedProfile, setSelectedProfile, note, setNote } = useHostHomeProfileContext();\r\n  const { serverURL, profileOwner, credits, setCredits } = useServerContext();\r\n  const [dayProgram, setDayProgram] = useState(false);\r\n\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleToggleDayProgram = () => {\r\n    setDayProgram(!dayProgram); // Toggle dayProgram value\r\n  };\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n\r\n    if (credits === 0) {\r\n      console.error('Error: Please purchase more credits to continue.');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedProfile,\r\n          dayProgram,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(data.generatedText);\r\n        setCredits(data.remainingCredits);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 10 }}>\r\n      <Text>Select a Profile:</Text>\r\n      <FlatList\r\n        data={profiles}\r\n        keyExtractor={(item) => item.profileId.toString()}\r\n        renderItem={({ item }) => (\r\n          <Button title={item.profileName} onPress={() => handleProfileSelect(item)} disabled={item === selectedProfile} />\r\n        )}\r\n      />\r\n      <ScrollView>\r\n        {note ? (\r\n          <Text>{note}</Text>\r\n        ) : (\r\n          <Text>No output generated yet.</Text>\r\n        )}\r\n      </ScrollView>\r\n      {selectedProfile && (\r\n        <View>\r\n          <Text>Credits: {credits}</Text>\r\n\r\n          <Text>Profile Name: {selectedProfile.profileName}</Text>\r\n\r\n          <Text>Profile Gender: {selectedProfile.profileGender}</Text>\r\n\r\n          <Text>Profile Goals: {selectedProfile.profileGoals}</Text>\r\n\r\n          <Text>Morning Medication: {selectedProfile.morningMedication ? 'Yes' : 'No'}</Text>\r\n\r\n          <Text>Afternoon Medication: {selectedProfile.afternoonMedication ? 'Yes' : 'No'}</Text>\r\n\r\n          <Text>Night Medication: {selectedProfile.nightMedication ? 'Yes' : 'No'}</Text>\r\n\r\n          <Text>Activities:</Text>\r\n          <FlatList\r\n            data={selectedProfile.activities}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={({ item }) => <Text>{item}</Text>}\r\n          />\r\n          <Button title={`Day Program: ${dayProgram ? 'Yes' : 'No'}`} onPress={handleToggleDayProgram} />\r\n          <Button title=\"Purchase!\" onPress={navigateToPurchase} />\r\n          <Button title=\"Generate!\" onPress={handleGenerate} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateHostHomeNotesScreen","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, FlatList, TouchableOpacity } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\n\r\nconst ViewHostHomeProfileScreen = () => {\r\n  const { profiles, selectedProfile, setSelectedProfile, updateProfile, deleteProfile } = useHostHomeProfileContext();\r\n  const [newActivity, setNewActivity] = useState('');\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (newActivity.trim() !== '') {\r\n      setSelectedProfile({ ...selectedProfile, activities: [...selectedProfile.activities, newActivity] });\r\n      setNewActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (activity) => {\r\n    const updatedActivities = selectedProfile.activities.filter((item) => item !== activity);\r\n    setSelectedProfile({ ...selectedProfile, activities: updatedActivities });\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      await updateProfile(selectedProfile);\r\n      console.log('Profile updated successfully:', selectedProfile);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProfile = async () => {\r\n    try {\r\n      await deleteProfile(selectedProfile.profileId);\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20 }}>\r\n      <Text>Select a Profile:</Text>\r\n      <FlatList\r\n        data={profiles}\r\n        keyExtractor={(item) => item.profileId.toString()}\r\n        renderItem={({ item }) => (\r\n          <Button title={item.profileName} onPress={() => handleProfileSelect(item)} disabled={item === selectedProfile} />\r\n        )}\r\n      />\r\n      {selectedProfile && (\r\n        <View>\r\n          <Button title=\"Delete Profile\" onPress={handleDeleteProfile} />\r\n\r\n          <Text>Profile Gender:</Text>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <Button\r\n              title=\"Male\"\r\n              onPress={() => setSelectedProfile({ ...selectedProfile, profileGender: 'Male' })}\r\n              disabled={selectedProfile?.profileGender === 'Male'}\r\n            />\r\n            <Button\r\n              title=\"Female\"\r\n              onPress={() => setSelectedProfile({ ...selectedProfile, profileGender: 'Female' })}\r\n              disabled={selectedProfile?.profileGender === 'Female'}\r\n            />\r\n          </View>\r\n\r\n          <Text>Profile Goals:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileGoals}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileGoals: text })}\r\n          />\r\n\r\n          <Text>Profile Name:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileName}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileName: text })}\r\n          />\r\n\r\n          <Text>Morning Medication:</Text>\r\n          <Button\r\n            title={selectedProfile.morningMedication ? 'Yes' : 'No'}\r\n            onPress={() => setSelectedProfile({ ...selectedProfile, morningMedication: !selectedProfile.morningMedication })}\r\n          />\r\n\r\n          <Text>Afternoon Medication:</Text>\r\n          <Button\r\n            title={selectedProfile.afternoonMedication ? 'Yes' : 'No'}\r\n            onPress={() => setSelectedProfile({ ...selectedProfile, afternoonMedication: !selectedProfile.afternoonMedication })}\r\n          />\r\n\r\n          <Text>Night Medication:</Text>\r\n          <Button\r\n            title={selectedProfile.nightMedication ? 'Yes' : 'No'}\r\n            onPress={() => setSelectedProfile({ ...selectedProfile, nightMedication: !selectedProfile.nightMedication })}\r\n          />\r\n\r\n          <Text>Activities:</Text>\r\n          <View style={{ flexDirection: 'row', marginBottom: 10 }}>\r\n            <TextInput\r\n              style={{ height: 40, borderColor: 'gray', borderWidth: 1, flex: 1, marginRight: 10 }}\r\n              value={newActivity}\r\n              onChangeText={(text) => setNewActivity(text)}\r\n            />\r\n            <Button title=\"Add\" onPress={handleAddActivity} />\r\n          </View>\r\n          <FlatList\r\n            data={selectedProfile.activities}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={({ item }) => (\r\n              <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                <Text>{item}</Text>\r\n                <TouchableOpacity onPress={() => handleDeleteActivity(item)}>\r\n                  <Text style={{ color: 'red', marginLeft: 10 }}>X</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          />\r\n\r\n          <Button title=\"Submit\" onPress={handleUpdateProfile} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ViewHostHomeProfileScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Button } from 'react-native';\r\nimport { useTherapistProfileContext } from '../../components/TherapistProfileContext';\r\n\r\nconst CreateTherapistProfileScreen = () => {\r\n  const { createProfile } = useTherapistProfileContext();\r\n  const [profileName, setProfileName] = useState('');\r\n  const [profileGender, setProfileGender] = useState('male');\r\n  const [profileObjective, setProfileObjective] = useState('');\r\n  const [profileIntervention, setProfileIntervention] = useState('');\r\n  const [profileGoals, setProfileGoals] = useState('');\r\n\r\n  const handleProfileCreation = async () => {\r\n    if (\r\n      !profileName.trim() ||\r\n      !profileGender.trim() ||\r\n      !profileObjective.trim() ||\r\n      !profileIntervention.trim() ||\r\n      !profileGoals.trim()\r\n    ) {\r\n      console.error('All fields are required.');\r\n      return;\r\n    }\r\n  \r\n    const newProfileData = {\r\n      profileName,\r\n      profileGender,\r\n      profileObjective,\r\n      profileIntervention,\r\n      profileGoals,\r\n    };\r\n  \r\n    try {\r\n      await createProfile(newProfileData);\r\n\r\n      //Reset Fields\r\n      setProfileName('');\r\n      setProfileGender('male');\r\n      setProfileObjective('');\r\n      setProfileIntervention('');\r\n      setProfileGoals('');\r\n  \r\n    } catch (error) {\r\n      console.log('Error creating profile:', error.message);\r\n    }\r\n  };  \r\n\r\n  const handleGenderToggle = () => {\r\n    setProfileGender(prevGender => (prevGender === 'male' ? 'female' : 'male'));\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput\r\n        placeholder=\"Profile Name\"\r\n        value={profileName}\r\n        onChangeText={text => setProfileName(text)}\r\n      />\r\n      <TouchableOpacity onPress={handleGenderToggle}>\r\n        <Text>Gender: {profileGender}</Text>\r\n      </TouchableOpacity>\r\n      <TextInput\r\n        placeholder=\"Profile Objective\"\r\n        value={profileObjective}\r\n        onChangeText={text => setProfileObjective(text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Profile Intervention\"\r\n        value={profileIntervention}\r\n        onChangeText={text => setProfileIntervention(text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Profile Goals\"\r\n        value={profileGoals}\r\n        onChangeText={text => setProfileGoals(text)}\r\n      />\r\n      <Button title=\"Create\" onPress={handleProfileCreation}></Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CreateTherapistProfileScreen","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst DispositionContainer = ({ dispositions, selectedDispositions, toggleDisposition }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const filteredDispositions = dispositions.filter(disposition =>\r\n    disposition.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <TextInput\r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10, padding: 10 }}\r\n        placeholder=\"Search Dispositions...\"\r\n        onChangeText={setSearchTerm}\r\n        value={searchTerm}\r\n      />\r\n\r\n      <ScrollView>\r\n        {filteredDispositions.map((item, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={[\r\n              styles.dispositionButton,\r\n              selectedDispositions.includes(item) && styles.selectedDispositionButton\r\n            ]}\r\n            onPress={() => toggleDisposition(item)}\r\n          >\r\n            <Text>{item}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DispositionContainer;\r\n\r\nconst styles = {\r\n  dispositionButton: {\r\n    padding: 10,\r\n    margin: 5,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n  },\r\n  selectedDispositionButton: {\r\n    backgroundColor: 'lightblue',\r\n  },\r\n};\r\n","import { View, Text, Button, FlatList, ScrollView} from 'react-native';\r\nimport React, { useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useTherapistProfileContext } from '../../components/TherapistProfileContext';\r\nimport { useServerContext } from '../../components/ServerContext';\r\nimport DispositionContainer from '../../components/DispositionContainer';\r\n\r\nconst dispositions = [\r\n  'Bright', 'Flat', 'Subdued', 'Aggressive', 'Happy', 'Playful',\r\n  'Exhausted', 'Confused', 'Defiant', 'Ecstatic', 'Suspicious', 'Disgusted',\r\n  'Angry', 'Sad', 'Frightened', 'Depressed', 'Bored', 'Talkative',\r\n  'Shy', 'Overwhelmed', 'Lonely', 'Enraged', 'Frustrated', 'Calm'\r\n];\r\n\r\nconst GenerateTherapistNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { profiles, selectedProfile, setSelectedProfile, note, setNote } = useTherapistProfileContext();\r\n  const { serverURL, profileOwner, credits, setCredits } = useServerContext();\r\n  const [selectedDispositions, setSelectedDispositions] = useState([]);\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const toggleDisposition = (disposition) => {\r\n    const updatedDispositions = selectedDispositions.includes(disposition)\r\n      ? selectedDispositions.filter((item) => item !== disposition)\r\n      : [...selectedDispositions, disposition];\r\n\r\n    setSelectedDispositions(updatedDispositions);\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    if (selectedDispositions.length === 0) {\r\n      console.error('Error: Please select at least one disposition.');\r\n      return;\r\n    }\r\n\r\n    if (credits === 0) {\r\n      console.error('Error: Please purchase more credits to continue.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedProfile,\r\n          selectedDispositions,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(data.generatedText);\r\n        setCredits(data.remainingCredits);\r\n        setSelectedDispositions([]);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text>Select a Profile:</Text>\r\n      <FlatList\r\n        data={profiles}\r\n        keyExtractor={(item) => item.profileId.toString()}\r\n        renderItem={({ item }) => (\r\n          <Button title={item.profileName} onPress={() => handleProfileSelect(item)} disabled={item === selectedProfile} />\r\n        )}\r\n      />\r\n      <DispositionContainer\r\n        dispositions={dispositions}\r\n        selectedDispositions={selectedDispositions}\r\n        toggleDisposition={toggleDisposition}\r\n      />\r\n      <ScrollView>\r\n        {note ? (\r\n          <Text>{note}</Text>\r\n        ) : (\r\n          <Text>No output generated yet.</Text>\r\n        )}\r\n      </ScrollView>\r\n      {selectedProfile && (\r\n        <View>\r\n          <Text>Credits: {credits}</Text>\r\n\r\n          <Text>Profile Name: {selectedProfile.profileName}</Text>\r\n\r\n          <Text>Profile Gender: {selectedProfile.profileGender}</Text>\r\n\r\n          <Text>Profile Goals: {selectedProfile.profileGoals}</Text>\r\n\r\n          <Text>Profile Objectives: {selectedProfile.profileObjective}</Text>\r\n\r\n          <Text>Profile Intervention: {selectedProfile.profileIntervention}</Text>\r\n\r\n          <Button title=\"Generate!\" onPress={handleGenerate} />\r\n          <Button title=\"Purchase!\" onPress={navigateToPurchase} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateTherapistNotesScreen","import React from 'react';\r\nimport { View, Text, TextInput, Button, FlatList } from 'react-native';\r\nimport { useTherapistProfileContext } from '../../components/TherapistProfileContext';\r\n\r\nconst ViewTherapistProfileScreen = () => {\r\n  const { profiles, selectedProfile, setSelectedProfile, updateProfile, deleteProfile } = useTherapistProfileContext();\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      const updatedProfile = { ...selectedProfile};\r\n      await updateProfile(updatedProfile);\r\n      console.log(updatedProfile)\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProfile = async () => {\r\n    try {\r\n      await deleteProfile(selectedProfile.profileId);\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 20 }}>\r\n      <Text>Select a Profile:</Text>\r\n      <FlatList\r\n        data={profiles}\r\n        keyExtractor={(item) => item.profileId.toString()}\r\n        renderItem={({ item }) => (\r\n          <Button\r\n            title={item.profileName}\r\n            onPress={() => handleProfileSelect(item)}\r\n            disabled={item === selectedProfile}\r\n          />\r\n        )}\r\n      />\r\n      {selectedProfile && (\r\n        <View>\r\n          <Button title=\"Delete Profile\" onPress={handleDeleteProfile} />\r\n          \r\n          <Text>Profile Gender:</Text>\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <Button\r\n              title=\"Male\"\r\n              onPress={() => {\r\n                setSelectedProfile({ ...selectedProfile, profileGender: 'Male' });\r\n              }}\r\n              disabled={selectedProfile?.profileGender === 'Male'}\r\n            />\r\n            <Button\r\n              title=\"Female\"\r\n              onPress={() => {\r\n                setSelectedProfile({ ...selectedProfile, profileGender: 'Female' });\r\n              }}\r\n              disabled={selectedProfile?.profileGender === 'Female'}\r\n            />\r\n          </View>\r\n\r\n          <Text>Profile Goals:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileGoals}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileGoals: text })}\r\n          />\r\n\r\n          <Text>Profile Intervention:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileIntervention}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileIntervention: text })}\r\n          />\r\n\r\n          <Text>Profile Objective:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileObjective}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileObjective: text })}\r\n          />\r\n\r\n          <Text>Profile Name:</Text>\r\n          <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\r\n            value={selectedProfile.profileName}\r\n            onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileName: text })}\r\n          />\r\n\r\n          <Button title=\"Submit\" onPress={handleUpdateProfile} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ViewTherapistProfileScreen","import React from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { signOut } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { useServerContext } from '../../components/ServerContext';\r\n\r\nconst SettingsScreen = () => {\r\n  const { accountType, changeAccountType, profileOwner } = useServerContext();\r\n\r\n  const handleAccountTypeChange = (newAccountType) => {\r\n    changeAccountType(profileOwner, newAccountType);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Current Account Type: {accountType}</Text>\r\n      <Button title=\"Change to Host Home\" onPress={() => handleAccountTypeChange('Host Home')} />\r\n      <Button title=\"Change to Therapist\" onPress={() => handleAccountTypeChange('Therapist')} />\r\n      <Button title=\"Sign Out\" onPress={handleSignOut} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;\r\n","import React from 'react';\r\nimport { View, Button } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerContext } from '../../components/ServerContext';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\n\r\nconst PurchaseScreen = () => {\r\n  const { profileOwner, reloadCredits } = useServerContext();\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n\r\n  const handlePurchase = async (productTitle) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/checkout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          productTitle: productTitle,\r\n          profileOwner: profileOwner,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        navigation.navigate('StripeCheckout', { checkoutUrl: data.url });\r\n      } else {\r\n        console.log('Unable to connect to stripe.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during checkout:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToGenerate = async () => {\r\n    try {\r\n      await reloadCredits();\r\n      navigation.goBack();\r\n    } catch (error) {\r\n      console.log('Error reloading credits');\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <View>\r\n      <Button title=\"1 Credit\" onPress={() => handlePurchase('Credits1')} />\r\n      <Button title=\"5 Credits\" onPress={() => handlePurchase('Credits5')} />\r\n      <Button title=\"15 Credits\" onPress={() => handlePurchase('Credits15')} />\r\n      <Button title=\"30 Credits\" onPress={() => handlePurchase('Credits30')} />\r\n      <Button title=\"Go Back\" onPress={navigateToGenerate} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PurchaseScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst StripeCheckoutScreen = ({ route }) => {\r\n  const { checkoutUrl } = route.params;\r\n  const [result, setResult] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const openBrowserAsync = async () => {\r\n      try {\r\n        let result = await WebBrowser.openBrowserAsync(checkoutUrl);\r\n        setResult(result);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    openBrowserAsync();\r\n    navigation.navigate('Purchase');\r\n  }, [checkoutUrl]); \r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text>{result && JSON.stringify(result)}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { useServerContext } from '../components/ServerContext';\r\nimport { HostHomeProfileProvider } from '../components/HostHomeProfileContext'\r\nimport { TherapistProfileProvider } from '../components/TherapistProfileContext'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport CreateHostHomeProfileScreen from './HostHomeScreens/CreateHostHomeProfileScreen'\r\nimport GenerateHostHomeNotesScreen from './HostHomeScreens/GenerateHostHomeNotesScreen'\r\nimport ViewHostHomeProfileScreen from './HostHomeScreens/ViewHostHomeProfileScreen'\r\nimport CreateTherapistProfileScreen from './TherapistScreens/CreateTherapistProfileScreen'\r\nimport GenerateTherapistNotesScreen from './TherapistScreens/GenerateTherapistNotesScreen'\r\nimport ViewTherapistProfileScreen from './TherapistScreens/ViewTherapistProfileScreen'\r\nimport SettingsScreen from './CommonScreens/SettingsScreen';\r\nimport PurchaseScreen from './CommonScreens/PurchaseScreen'\r\nimport StripeCheckoutScreen from './CommonScreens/StripeCheckoutScreen'\r\n\r\nconst MainNavigator = () => {\r\n  const { accountType, profileOwner } = useServerContext();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (accountType !== null) {\r\n      setLoading(false);\r\n    }\r\n  }, [accountType]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View>\r\n        <Text>Loading</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const Stack = createNativeStackNavigator();\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  const HostHomeStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateHostHome\" component={GenerateHostHomeNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  const TherapistStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateTherapist\" component={GenerateTherapistNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  if (accountType === 'Host Home') {\r\n\r\n    return (\r\n      <HostHomeProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n          <Tab.Screen name=\"Generate\" component={HostHomeStack} />\r\n          <Tab.Screen name=\"CreateProfile\" component={CreateHostHomeProfileScreen} />\r\n          <Tab.Screen name=\"ViewProfile\" component={ViewHostHomeProfileScreen} />\r\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Tab.Navigator>\r\n      </HostHomeProfileProvider>\r\n    );\r\n\r\n  } else if (accountType === 'Therapist') {\r\n\r\n    return (\r\n      <TherapistProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n          <Tab.Screen name=\"Generate\" component={TherapistStack} />\r\n          <Tab.Screen name=\"CreateProfile\" component={CreateTherapistProfileScreen} />\r\n          <Tab.Screen name=\"ViewProfile\" component={ViewTherapistProfileScreen} />\r\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Tab.Navigator>\r\n      </TherapistProfileProvider>\r\n    );\r\n\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MainNavigator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../components/FirebaseConfig';\r\nimport { ServerURLProvider } from '../components/ServerURLContext';\r\nimport { ServerProvider } from '../components/ServerContext';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport SignInScreen from './AuthScreens/SignInScreen';\r\nimport SignUpScreen from './AuthScreens/SignUpScreen';\r\nimport WelcomeScreen from './AuthScreens/WelcomeScreen';\r\nimport MainNavigator from './MainNavigator';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst RootNavigator = () => {\r\n  \r\n  const serverURL = 'http://10.0.0.70:5000' // Production: 'https://easyetch.onrender.com';\r\n  const [profileOwner, setProfileOwner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(FIREBASE_AUTH, async (user) => {\r\n      if (user) {\r\n        setProfileOwner(user.email);\r\n      } else {\r\n        setProfileOwner(null);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <ServerURLProvider serverURL={serverURL}> \r\n      <NavigationContainer>\r\n        {profileOwner ? (\r\n        <ServerProvider profileOwner={profileOwner}>\r\n          <MainNavigator />\r\n        </ServerProvider>\r\n        ) : (\r\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n            <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\r\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </ServerURLProvider>\r\n  );\r\n};\r\n\r\nexport default RootNavigator;\r\n","import { NativeWindStyleSheet } from \"nativewind\";\r\nimport RootNavigator from \"./src/screens/RootNavigator\";\r\n\r\nNativeWindStyleSheet.setOutput({\r\n  default: \"native\",\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <RootNavigator />\r\n  );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [307], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FIREBASE_APP","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_AUTH","getAuth","ServerURLContext","createContext","useServerURL","useContext","ServerURLProvider","_ref","children","serverURL","_jsx","Provider","value","ServerContext","useServerContext","ServerProvider","profileOwner","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","accountType","setAccountType","fetchAccountType","_ref2","_asyncToGenerator","response","fetch","data","json","error","console","_x","apply","arguments","changeAccountType","_ref3","newAccountType","method","headers","body","JSON","stringify","updatedAccountType","_x2","_x3","fetchCredits","_ref4","_x4","reloadCredits","_ref5","creditsData","useEffect","fetchData","_ref6","styles","StyleSheet","create","container","flex","justifyContent","alignItems","input","width","marginVertical","padding","borderWidth","borderColor","borderRadius","navigation","useNavigation","email","setEmail","password","setPassword","handleSignIn","auth","signInWithEmailAndPassword","_jsxs","View","style","Text","TextInput","placeholder","onChangeText","text","autoCapitalize","secureTextEntry","Button","title","onPress","navigate","picker","_useState5","_useState6","userType","setUserType","handleSignup","navigateToWelcome","errorData","Picker","selectedValue","onValueChange","itemValue","Item","label","buttonContainer","marginTop","HostHomeProfileContext","useHostHomeProfileContext","HostHomeProfileProvider","profiles","setProfiles","selectedProfile","setSelectedProfile","note","setNote","fetchProfiles","ok","Error","status","createProfile","newProfileData","_objectSpread","log","concat","_toConsumableArray","updateProfile","updatedProfile","profileId","updatedProfileData","updatedProfiles","map","profile","deleteProfile","filter","length","profilesData","TherapistProfileContext","useTherapistProfileContext","TherapistProfileProvider","profileName","setProfileName","profileGender","setProfileGender","profileGoals","setProfileGoals","_useState7","_useState8","morningMedication","setMorningMedication","_useState9","_useState10","afternoonMedication","setAfternoonMedication","_useState11","_useState12","nightMedication","setNightMedication","_useState13","_useState14","activity","setActivity","_useState15","_useState16","activities","setActivities","handleProfileCreation","trim","message","TouchableOpacity","prevGender","prevActivities","FlatList","renderItem","item","index","flexDirection","_","i","handleDeleteActivity","keyExtractor","toString","_useHostHomeProfileCo","_useServerContext","dayProgram","setDayProgram","handleGenerate","generatedText","remainingCredits","disabled","ScrollView","newActivity","setNewActivity","handleUpdateProfile","handleDeleteProfile","height","marginBottom","marginRight","updatedActivities","color","marginLeft","profileObjective","setProfileObjective","profileIntervention","setProfileIntervention","dispositions","selectedDispositions","toggleDisposition","searchTerm","setSearchTerm","filteredDispositions","disposition","toLowerCase","includes","margin","dispositionButton","selectedDispositionButton","backgroundColor","_NativeWindStyleSheet","_useTherapistProfileC","setSelectedDispositions","DispositionContainer","updatedDispositions","handleAccountTypeChange","handleSignOut","signOut","handlePurchase","productTitle","url","checkoutUrl","navigateToGenerate","goBack","route","params","result","setResult","openBrowserAsync","WebBrowser","loading","setLoading","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","Navigator","screenOptions","headerShown","Screen","name","component","GenerateHostHomeNotesScreen","PurchaseScreen","StripeCheckoutScreen","CreateHostHomeProfileScreen","ViewHostHomeProfileScreen","SettingsScreen","GenerateTherapistNotesScreen","CreateTherapistProfileScreen","ViewTherapistProfileScreen","setProfileOwner","unsubscribe","onAuthStateChanged","user","NavigationContainer","MainNavigator","WelcomeScreen","SignUpScreen","SignInScreen","App","RootNavigator","NativeWindStyleSheet","setOutput","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}