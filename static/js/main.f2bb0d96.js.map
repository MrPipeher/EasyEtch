{"version":3,"file":"static/js/main.f2bb0d96.js","mappings":"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","sources":["src/components/FirebaseConfig.js","src/components/ServerURLContext.js","src/components/ServerContext.js","src/screens/AuthScreens/SignInScreen.js","src/screens/AuthScreens/SignUpScreen.js","src/screens/AuthScreens/ForgotPasswordScreen.js","src/components/BusinessContext.js","src/components/UserContext.js","src/screens/BusinessScreens/ViewBusiness.js","src/screens/BusinessNavigator.js","src/components/HostHomeProfileContext.js","src/components/TherapistProfileContext.js","src/screens/HostHomeScreens/CreateHostHomeProfileScreen.js","src/screens/HostHomeScreens/GenerateHostHomeNotesScreen.js","src/screens/HostHomeScreens/ViewHostHomeProfileScreen.js","src/components/DispositionContainer.js","src/screens/TherapistScreens/GenerateTherapistNotesScreen.js","src/screens/CommonScreens/SettingsScreen.js","src/screens/CommonScreens/PurchaseScreen.js","src/screens/CommonScreens/StripeCheckoutScreen.js","src/screens/UserNavigator.js","src/screens/MainNavigator.js","src/screens/RootNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBQuUaG_jhfDZpKTdEX2bDQi184lRiBFzg\",\r\n  authDomain: \"easyetch-2764f.firebaseapp.com\",\r\n  projectId: \"easyetch-2764f\",\r\n  storageBucket: \"easyetch-2764f.appspot.com\",\r\n  messagingSenderId: \"429626063303\",\r\n  appId: \"1:429626063303:web:e163bac12113c7b43c01e2\"\r\n};\r\n\r\n// initialize Firebase App\r\nconst FIREBASE_APP = initializeApp(firebaseConfig);\r\nconst FIREBASE_AUTH = getAuth(FIREBASE_APP);\r\n\r\nexport { FIREBASE_APP, FIREBASE_AUTH};","import React, { createContext, useContext } from 'react';\r\n\r\nconst ServerURLContext = createContext();\r\n\r\nexport const useServerURL = () => {\r\n  return useContext(ServerURLContext);\r\n};\r\n\r\nexport const ServerURLProvider = ({ children, serverURL }) => {\r\n  return (\r\n    <ServerURLContext.Provider value={serverURL}>\r\n      {children}\r\n    </ServerURLContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst ServerContext = createContext();\r\n\r\nexport const useServerContext = () => {\r\n  return useContext(ServerContext);\r\n};\r\n\r\nexport const ServerProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [accountType, setAccountType] = useState(null);\r\n\r\n  const fetchAccountType = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/getAccountType?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      setAccountType(data.accountType);\r\n    } catch (error) {\r\n      console.error('Error fetching account type:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchAccountType(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching account data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <ServerContext.Provider \r\n      value={{ \r\n          accountType,\r\n          serverURL,\r\n          profileOwner,\r\n        }}>\r\n      {children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Image, Text, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst SignInScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSignIn = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      const credentials = await signInWithEmailAndPassword(auth, email, password);\r\n\r\n      if (!credentials.user.emailVerified) {\r\n        setError('Please verify your email before logging in.');\r\n        await signOut(FIREBASE_AUTH);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error signing in:', error);\r\n      setError('Invalid email or password.');\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const navigateToSignUp = () => {\r\n    navigation.navigate('SignUp');\r\n  };\r\n\r\n  const navigateToForgotPassword = () => {\r\n    navigation.navigate('ForgotPassword');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          {/* Header */}\r\n          <View className = \"h-[40%] justify-center items-center\">\r\n\r\n            {/* Logo */}\r\n            <Image \r\n              className = \"w-[60%] h-[100%] absolute\"\r\n              source={require('../../../assets/images/Logo.png')} \r\n            />\r\n\r\n          </View>\r\n\r\n          {/* Container */}\r\n          <View className = \"h-[50%] w-full justify-center items-center\">\r\n\r\n            {error && (\r\n              <Text className = \"text-red-500 text-base m-2\">{error}</Text>\r\n            )}\r\n\r\n            <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n              <TextInput\r\n                  className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                  placeholder=\"Email\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setEmail(text)}\r\n                  value={email}\r\n                  secureTextEntry={false}\r\n              />\r\n            </View>\r\n\r\n            <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                <TextInput\r\n                    className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                    placeholder=\"Password\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    secureTextEntry={!isPasswordVisible}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                  style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                  onPress={togglePasswordVisibility}\r\n                >\r\n                  <Image\r\n                    source={require('../../../assets/password.png')}\r\n                    style={{ width: 25, height: 25 }}\r\n                  />\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n            \r\n\r\n            <View className=\"w-[50%] h-[15%] border-white border-2 bg-sky-400/50 rounded-xl justify-center my-2\">\r\n              <TouchableOpacity onPress={handleSignIn}>\r\n                  <Text className=\"text-white text-xl text-center\">Sign In</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View className=\"w-[50%] h-[15%] border-sky-500 border-2 bg-white rounded-xl justify-center my-2\">\r\n                <TouchableOpacity onPress={navigateToSignUp}>\r\n                    <Text className=\"text-sky-500 text-xl text-center\">Sign Up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {/* Footer */}\r\n          <View className = \"h-[5%] justify-center items-center\">\r\n\r\n            <TouchableOpacity onPress={navigateToForgotPassword}>\r\n              <Text className = \"text-white text-2xl\">Forgot password?</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Image, Text, TouchableOpacity, TextInput, ScrollView } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { signInWithEmailAndPassword, sendEmailVerification, signOut } from 'firebase/auth';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst SignUpScreen = () => {\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [canSignIn, setCanSignIn] = useState(false);\r\n\r\n  const [businessType, setBusinessType] = useState('Individual');\r\n  const [userType, setUserType] = useState('Host Home');\r\n  const [workForBusiness, setWorkForBusiness] = useState('');\r\n\r\n  const [businessName, setBusinessName] = useState('');\r\n  const [userAmount, setUserAmount] = useState('');\r\n  \r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const navigateToSignIn = async () => {\r\n    if (canSignIn) {\r\n      await signOut(FIREBASE_AUTH);\r\n      setCanSignIn(false);      \r\n      navigation.navigate('SignIn');\r\n    } else {\r\n      navigation.navigate('SignIn');\r\n    }\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    setCanSignIn(false);\r\n\r\n    if (email === '' || password === '') {setError('Must a username and password'); return;}\r\n    if (workForBusiness && businessName === '') {setError('Must include a business name!'); return;}\r\n\r\n    try {\r\n      let response;\r\n\r\n      if (businessType === 'Individual') {\r\n\r\n        response = await fetch(`${serverURL}/user/signup`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password, userType, businessName }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          await signInWithEmailAndPassword(FIREBASE_AUTH, email, password);\r\n          setError('An email verification has been sent to your email address.');\r\n          await sendEmailVerification(FIREBASE_AUTH.currentUser);\r\n          setCanSignIn(true);\r\n        } else {\r\n          if (response.status == 500) {\r\n            setError('This Email already exists. If you just verified the address, click \"go back\" and sign in.');\r\n          } else {\r\n            setError(error.message);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        response = await fetch(`${serverURL}/business/signup`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password, businessName, userAmount }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const signUpResult = await response.json();\r\n\r\n          if (signUpResult.success) {\r\n            await signInWithEmailAndPassword(FIREBASE_AUTH, email, password);\r\n            setError('An email verification has been sent to your email address.');\r\n            await sendEmailVerification(FIREBASE_AUTH.currentUser);\r\n            setCanSignIn(true);\r\n          } else {\r\n            setError(signUpResult.message);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"flex-1\"\r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <ScrollView >\r\n            <View style = {{height: hp('100%')}}>\r\n              <View className = \"h-full w-[75%] self-center\">\r\n\r\n                {/* Header */}\r\n                <View className = \"h-[10%]\"/>\r\n\r\n                {/* Account Type */}\r\n                <View className = \"h-[10%] w-full items-center\">\r\n\r\n                  <Text className = \"text-white text-lg\">Account Type:</Text>\r\n\r\n                  <View className = \"flex-row h-full w-full justify-evenly\">\r\n                    {businessType === 'Individual' ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Individual')}>\r\n                          <Text className = \"text-white text-xl text-center\">Individual</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Individual')}>\r\n                          <Text className = \"text-white text-xl text-center\">Individual</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n\r\n                    {businessType === 'Business' ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Business')}>\r\n                          <Text className = \"text-white text-xl text-center\">Business</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Business')}>\r\n                          <Text className = \"text-white text-xl text-center\">Business</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n\r\n                {businessType === 'Individual' ? (<>\r\n\r\n                  {/* Profession */}\r\n                  <View className = \"h-[10%] w-full items-center\">\r\n\r\n                    <Text className = \"text-white text-lg\">Profession:</Text>\r\n\r\n                    <View className = \"flex-row h-full w-full justify-evenly\">\r\n                      {userType === 'Host Home' ? (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Therapist')}>\r\n                            <Text className = \"text-white text-xl text-center\">Host Home</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ) : (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Host Home')}>\r\n                            <Text className = \"text-white text-xl text-center\">Host Home</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      )}\r\n\r\n                      {userType === 'Therapist' ? (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Host Home')}>\r\n                            <Text className = \"text-white text-xl text-center\">Therapist</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ) : (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Therapist')}>\r\n                            <Text className = \"text-white text-xl text-center\">Therapist</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      )}\r\n                    </View>\r\n                  </View> \r\n\r\n                  {/* Business */}\r\n                  <View className = \"h-[10%] w-full items-center\">\r\n\r\n                    <Text className = \"text-white text-lg\">Do you work for a business?</Text>\r\n\r\n                    <View className = \"flex-row h-full w-full justify-evenly\">\r\n                      {workForBusiness === true ? (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(true)}>\r\n                            <Text className = \"text-white text-xl text-center\">Yes</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ) : (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(true)}>\r\n                            <Text className = \"text-white text-xl text-center\">Yes</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      )}\r\n\r\n                      {workForBusiness === false ? (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(false)}>\r\n                            <Text className = \"text-white text-xl text-center\">No</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      ) : (\r\n                        <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(false)}>\r\n                            <Text className = \"text-white text-xl text-center\">No</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      )}\r\n                    </View>\r\n                  </View> \r\n                  \r\n                  {/* Error Messages */}\r\n                  <View className = \"h-[10%] w-full items-center\">\r\n                    {error && (\r\n                      <Text className = \"text-red-500 text-base text-center m-2\">{error}</Text>\r\n                    )}\r\n                  </View>\r\n                  \r\n                  {/* Input Fields */}\r\n                  <View className = \"h-[30%] w-full items-center space-y-1\">\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Email\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setEmail(text)}\r\n                          value={email}\r\n                          secureTextEntry={false}\r\n                      />\r\n                    </View>\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Password\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setPassword(text)}\r\n                          value={password}\r\n                          secureTextEntry={!isPasswordVisible}\r\n                      />\r\n\r\n                      <TouchableOpacity\r\n                        style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                        onPress={togglePasswordVisibility}\r\n                      >\r\n                        <Image\r\n                          source={require('../../../assets/password.png')}\r\n                          style={{ width: 25, height: 25 }}\r\n                        />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {workForBusiness === true && (\r\n                      <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                        <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Business Name\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setBusinessName(text)}\r\n                          value={businessName}\r\n                          secureTextEntry={false}\r\n                        />\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </>) : (<>\r\n\r\n                  {/* Error Messages */}\r\n                  <View className = \"h-[10%] w-full items-center\">\r\n                    {error && (\r\n                      <Text className = \"text-red-500 text-base text-center m-2\">{error}</Text>\r\n                    )}\r\n                  </View>\r\n\r\n                  {/* Input Fields */}\r\n                  <View className = \"h-[30%] w-full items-center space-y-1\">\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Business Name\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setBusinessName(text)}\r\n                        value={businessName}\r\n                        secureTextEntry={false}\r\n                      />\r\n                    </View>\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"User Amount\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setUserAmount(text)}\r\n                        value={userAmount}\r\n                        secureTextEntry={false}\r\n                      />\r\n                    </View>\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Email\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setEmail(text)}\r\n                          value={email}\r\n                          secureTextEntry={false}\r\n                      />\r\n                    </View>\r\n\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Password\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setPassword(text)}\r\n                          value={password}\r\n                          secureTextEntry={!isPasswordVisible}\r\n                      />\r\n\r\n                      <TouchableOpacity\r\n                        style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                        onPress={togglePasswordVisibility}\r\n                      >\r\n                        <Image\r\n                          source={require('../../../assets/password.png')}\r\n                          style={{ width: 25, height: 25 }}\r\n                        />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View className = \"h-[10%]\"/>\r\n\r\n                </>)}\r\n\r\n                {/* Buttons */}\r\n\r\n                <View className = \"h-[20%] w-full flex-row justify-evenly items-center\">\r\n\r\n                  <View className=\"w-[40%] h-[30%] border-white border-2 bg-sky-400/50 rounded-full justify-center\">\r\n                    <TouchableOpacity onPress={handleSignup}>\r\n                      <Text className=\"text-white text-xl text-center\">Sign Up</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  <View className = \"w-[40%] h-[30%] bg-white border-2 border-sky-500 rounded-full justify-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={navigateToSignIn}>\r\n                      <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                </View>\r\n\r\n              </View>\r\n            </View>\r\n          </ScrollView>\r\n          \r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await sendPasswordResetEmail(auth, email);\r\n      setEmailSent(true);\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error sending password reset email:', error.message);\r\n    }\r\n  };\r\n\r\n  const navigateToSignIn = () => {\r\n    navigation.navigate('SignIn');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[50%] w-full justify-center items-center space-y-4\">\r\n\r\n              <View className = \"w-[75%] h-[15%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Enter your Email\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={email}\r\n                  onChangeText={setEmail}\r\n                />\r\n              </View>\r\n\r\n              <View className = \"w-[50%] h-[10%] bg-sky-400/50 border-2 border-white rounded-full justify-center\">\r\n                <TouchableOpacity className = \"h-full w-full justify-center\" onPress={handlePasswordReset}> \r\n                  <Text className = \"text-white text-xl text-center\">Send Instructions</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {emailSent ? <Text className = \"text-center text-white text-2xl\">Please check your email for instructions on resetting your password.</Text> : null}\r\n            </View>\r\n\r\n            <View className = \"h-[30%] w-full items-center\">\r\n\r\n              <View className = \"w-[25%] h-[20%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity className = \"h-full w-full justify-center\" onPress={navigateToSignIn}> \r\n                  <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst BusinessContext = createContext();\r\n\r\nexport const useBusinessContext = () => {\r\n  return useContext(BusinessContext);\r\n};\r\n\r\nexport const BusinessProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [businessName, setBusinessName] = useState(null);\r\n  const [currentUsers, setCurrentUsers] = useState(null);\r\n  const [userAmount, setUserAmount] = useState(null);\r\n  const [credits, setCredits] = useState(null);\r\n\r\n  const fetchBusinessInfo = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/getBusinessInfo?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      setBusinessName(data.businessName);\r\n      setCurrentUsers(data.currentUsers);\r\n      setUserAmount(data.userAmount);\r\n      setCredits(data.credits);\r\n    } catch (error) {\r\n      console.error('Error fetching account type:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchBusinessInfo(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching account data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <BusinessContext.Provider \r\n      value={{ \r\n          businessName,\r\n          currentUsers,\r\n          userAmount,\r\n          credits,\r\n          profileOwner,\r\n          serverURL,\r\n        }}>\r\n      {children}\r\n    </BusinessContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nexport const UserProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [businessName, setBusinessName] = useState(null);\r\n  const [userCredits, setUserCredits] = useState(null);\r\n  const [profession, setProfession] = useState();\r\n  const [isBusiness, setIsBusiness] = useState(null);\r\n  const [formattedBillingCycleEnd, setFormattedBillingCycleEndDate] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const [maxCredits, setMaxCredits] = useState(null);\r\n  const [tier, setTier] = useState(null);\r\n  const [subscriptionType, setSubscriptionType] = useState(null);\r\n\r\n  const fetchUserInfo = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/user/getUserInfo?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n  \r\n      if ('businessName' in data.userInfo) {\r\n        const { businessName, credits, profession, isBusiness } = data.userInfo;\r\n        setBusinessName(businessName);\r\n        setUserCredits(credits);\r\n        setProfession(profession);\r\n        setIsBusiness(isBusiness);\r\n        await fetchUserSubscription(profileOwner, profession);\r\n        console.log(profileOwner, profession)\r\n      } else {\r\n        const { credits, profession, isBusiness } = data.userInfo;\r\n        setUserCredits(credits);\r\n        setProfession(profession);\r\n        setIsBusiness(isBusiness);\r\n\r\n        await fetchUserSubscription(profileOwner, profession);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserSubscription = async (profileOwner, profession) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/user/getUserSubscription`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          subscriptionType: profession,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const { billingCycleEnd, status, credits, tier, subscriptionType } = data.subData;\r\n\r\n      const billingCycleEndTimestamp = billingCycleEnd;\r\n      const billingCycleEndDate = new Date(billingCycleEndTimestamp._seconds * 1000);\r\n      const month = (billingCycleEndDate.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = billingCycleEndDate.getDate().toString().padStart(2, '0');\r\n      const year = billingCycleEndDate.getFullYear();\r\n      setFormattedBillingCycleEndDate(`${month}/${day}/${year}`);\r\n\r\n      setStatus(status);\r\n      setMaxCredits(credits);\r\n      setTier(tier);\r\n      setSubscriptionType(subscriptionType);\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching subscription data:', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchUserInfo(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <UserContext.Provider \r\n      value={{ \r\n          businessName,\r\n          userCredits,\r\n          setUserCredits,\r\n          profession,\r\n          isBusiness,\r\n          profileOwner,\r\n          serverURL,\r\n          formattedBillingCycleEnd,\r\n          status,\r\n          maxCredits,\r\n          tier,\r\n          subscriptionType,\r\n        }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { signOut } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\n\r\nconst ViewBusiness = () => {\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n  \r\n    return (\r\n      <View>\r\n        <Text>This is a blank screen</Text>\r\n        <View className = \"w-[75%] h-[50%] bg-white rounded-full justify-center\">\r\n          <TouchableOpacity onPress={handleSignOut}> \r\n            <Text className = \"text-black text-base text-center\">Sign Out</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\nexport default ViewBusiness;","import React from 'react';\r\nimport { Image } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\nimport ViewBusiness from './BusinessScreens/ViewBusiness';\r\n\r\nconst BusinessNavigator = () => {\r\n\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  return (\r\n    <Tab.Navigator \r\n      initialRouteName=\"View\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          backgroundColor: 'white',\r\n          borderColor: 'black',\r\n          width: wp(100),\r\n          maxWidth: 1080,\r\n          alignSelf: 'center',\r\n      },\r\n      tabBarIconStyle: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      }}>\r\n\r\n      <Tab.Screen \r\n        name=\"View\" \r\n        component={ViewBusiness} \r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Image\r\n              source={require('../../assets/navicons/user.png')}\r\n              style={{ width: size, height: size, tintColor: color }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default BusinessNavigator;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst HostHomeProfileContext = createContext();\r\n\r\nexport const useHostHomeProfileContext = () => {\r\n  return useContext(HostHomeProfileContext);\r\n};\r\n\r\nexport const HostHomeProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [note, setNote] = useState(null);\r\n  const [dayProgram, setDayProgram] = useState(false);\r\n\r\n  const fetchProfiles = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/profiles?profileOwner=${profileOwner}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createProfile = async (newProfileData) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/createprofile`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner,\r\n          ...newProfileData,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Profile created successfully:', data);\r\n        setProfiles([...profiles, data]);\r\n        setSelectedProfile(data);\r\n      } else {\r\n        console.error('Error creating profile:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating profile:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/updateprofile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: updatedProfile.profileId,\r\n          updatedProfileData: updatedProfile\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile updated successfully!');\r\n        const updatedProfiles = profiles.map(profile =>\r\n          profile.profileId === updatedProfile.profileId ? updatedProfile : profile\r\n        );\r\n        setProfiles(updatedProfiles);\r\n        setSelectedProfile(updatedProfile);\r\n      } else {\r\n        console.error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProfile = async (profileId) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/deleteprofile`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: profileId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile deleted successfully!');\r\n        const updatedProfiles = profiles.filter(profile => profile.profileId !== profileId);\r\n        setProfiles(updatedProfiles);\r\n        if (selectedProfile && selectedProfile.profileId === profileId) {\r\n          setSelectedProfile(updatedProfiles.length > 0 ? updatedProfiles[0] : null);\r\n        }\r\n      } else {\r\n        console.error('Failed to delete profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const profilesData = await fetchProfiles(profileOwner);\r\n        setProfiles(profilesData);\r\n        if (profilesData.length > 0) {\r\n          setSelectedProfile(profilesData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profiles:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <HostHomeProfileContext.Provider \r\n      value={{ \r\n          profileOwner,\r\n          profiles,\r\n          createProfile,\r\n          updateProfile,\r\n          deleteProfile,\r\n          selectedProfile,\r\n          setSelectedProfile,\r\n          note,\r\n          setNote,\r\n          dayProgram,\r\n          setDayProgram,\r\n        }}>\r\n      {children}\r\n    </HostHomeProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst TherapistProfileContext = createContext();\r\n\r\nexport const useTherapistProfileContext = () => {\r\n  return useContext(TherapistProfileContext);\r\n};\r\n\r\nexport const TherapistProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [note, setNote] = useState(null);\r\n  const [behavior, setBehavior] = useState('');\r\n  const [intervention, setIntervention] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [plan, setPlan] = useState('');\r\n\r\n  return (\r\n    <TherapistProfileContext.Provider \r\n      value={{ \r\n          note,\r\n          setNote,\r\n          behavior,\r\n          setBehavior,\r\n          intervention,\r\n          setIntervention,\r\n          response,\r\n          setResponse,\r\n          plan,\r\n          setPlan,\r\n        }}>\r\n      {children}\r\n    </TherapistProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, ScrollView } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst CreateHostHomeProfileScreen = () => {\r\n  const { createProfile } = useHostHomeProfileContext();\r\n  const [profileName, setProfileName] = useState('');\r\n  const [profileGender, setProfileGender] = useState('Male');\r\n  const [profileGoals, setProfileGoals] = useState('');\r\n  const [morningMedication, setMorningMedication] = useState(false);\r\n  const [afternoonMedication, setAfternoonMedication] = useState(false);\r\n  const [nightMedication, setNightMedication] = useState(false);\r\n  const [activity, setActivity] = useState('');\r\n  const [activities, setActivities] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  const handleProfileCreation = async () => {\r\n    if (!profileName.trim() || !profileGender.trim() || !profileGoals.trim()) {\r\n      console.error('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    const newProfileData = {\r\n      profileName,\r\n      profileGender,\r\n      profileGoals,\r\n      morningMedication,\r\n      afternoonMedication,\r\n      nightMedication,\r\n      activities,\r\n    };\r\n\r\n    try {\r\n      await createProfile(newProfileData);\r\n\r\n      // Reset Fields\r\n      setProfileName('');\r\n      setProfileGender('Male');\r\n      setProfileGoals('');\r\n      setMorningMedication(false);\r\n      setAfternoonMedication(false);\r\n      setNightMedication(false);\r\n      setActivities([]);\r\n\r\n      navigateToView();\r\n\r\n    } catch (error) {\r\n      console.log('Error creating profile:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (activity.trim()) {\r\n      setActivities(prevActivities => [...prevActivities, activity]);\r\n      setActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (index) => {\r\n    setActivities(prevActivities => prevActivities.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleGenderToggle = () => {\r\n    setProfileGender(prevGender => (prevGender === 'Male' ? 'Female' : 'Male'));\r\n  };\r\n\r\n  const navigateToView = () => {\r\n    navigation.navigate('ViewProfile');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n            \r\n            {/* Title */}\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            {/* Profile Info */}\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n        \r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Name\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setProfileName(text)}\r\n                  value={profileName}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenderToggle}>\r\n                  <Text className = \"text-black text-base text-center\">Gender: {profileGender}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Goals\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setProfileGoals(text)}\r\n                  value={profileGoals}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n            </View>\r\n\r\n            {/* Medication */}\r\n            <View className = \"h-[15%] justify-center\">\r\n\r\n              <Text className = \"text-white text-xl text-center\">Medication Time:</Text>\r\n\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n                {morningMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setMorningMedication(!morningMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setMorningMedication(!morningMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {afternoonMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setAfternoonMedication(!afternoonMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setAfternoonMedication(!afternoonMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {nightMedication  ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setNightMedication(!nightMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setNightMedication(!nightMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%]\">\r\n              <View className = \"flex-row h-[20%] justify-evenly items-center my-2\">\r\n\r\n                <View className = \"w-[60%] h-[100%] bg-white rounded-full\">\r\n                  <TextInput\r\n                    className=\"h-full w-full text-black text-base text-center\"\r\n                    placeholder=\"Add Activity\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setActivity(text)}\r\n                    value={activity}\r\n                    secureTextEntry={false}\r\n                  />\r\n                </View>\r\n                <View className = \"w-[30%] h-[100%] border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleAddActivity}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[70%] bg-white border-2 border-white rounded-2xl py-2 m-4\">\r\n                <FlatList\r\n                  data={activities}\r\n                  renderItem={({ item, index }) => (\r\n                    <ScrollView>\r\n                      <View className = \"flex-row\">\r\n\r\n                        <Text className = \"w-[75%] text-center text-black\">{item}</Text>\r\n\r\n                        <View className = \"w-[25%]\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleDeleteActivity(index)}>\r\n                            <Text className = \"text-red-500 text-base text-center\">X</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n\r\n                      </View>\r\n                    </ScrollView>\r\n                  )}\r\n                  keyExtractor={(item, index) => index.toString()}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            {/* Footer */}\r\n            <View className = \"h-[15%] flex-row items-center justify-evenly\">\r\n              <View className = \" h-[50%] w-[30%] bg-white/20 border-2 border-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleProfileCreation}>\r\n                  <Text className = \"text-white text-xl text-center\">Create</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View className = \" h-[50%] w-[30%] bg-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={navigateToView}>\r\n                  <Text className = \"text-black text-xl text-center\">Go back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CreateHostHomeProfileScreen;\r\n","import React, { useState } from 'react'\r\nimport { View, Text, ScrollView, TouchableOpacity, Alert} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useUserContext } from '../../components/UserContext';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Clipboard from 'expo-clipboard';\r\n\r\nconst GenerateHostHomeNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { profiles, selectedProfile, setSelectedProfile, note, setNote, dayProgram, setDayProgram } = useHostHomeProfileContext();\r\n  const {userCredits, setUserCredits, profileOwner, serverURL} = useUserContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleToggleDayProgram = () => {\r\n    setDayProgram(!dayProgram); // Toggle dayProgram value\r\n  };\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const handleCopy = async () => {\r\n    await Clipboard.setStringAsync(note);\r\n    Alert.alert('Note Saved!', 'Your note has been saved to your clipboard!')\r\n  };\r\n\r\n  const handleFinished = () => {\r\n    setNote('');\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n\r\n    if (userCredits === 0) {\r\n      console.error('Error: Please purchase more credits or subscribe to continue.');\r\n      return;\r\n    }\r\n\r\n    if (note) {\r\n      setNote('');\r\n    }\r\n\r\n    //Start Loading\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedProfile,\r\n          dayProgram,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(data.generatedText);\r\n        setUserCredits(data.remainingCredits);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getCurrentDate = () => {\r\n    const currentDate = new Date();\r\n    const month = currentDate.getMonth() + 1; // Months are zero-based\r\n    const day = currentDate.getDate();\r\n    const year = currentDate.getFullYear();\r\n\r\n    return `${String(month).padStart(2, '0')}/${String(day).padStart(2, '0')}/${year}`;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const formattedDate = getCurrentDate();\r\n      const filename = `${selectedProfile.profileName}_${formattedDate}.txt`;\r\n\r\n      // Create a Blob containing the text\r\n      const blob = new Blob([note], { type: 'text/plain' });\r\n\r\n      // Create a download link and trigger a click event to download the file\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = filename;\r\n      link.click();\r\n    } catch (error) {\r\n      console.error('Error saving file:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[60%] justify-center\">\r\n\r\n              <Text className = \"text-white text-3xl text-center\">Generating Note..</Text>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base text-center\">We accept 07</Text>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (note) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[60%]\">\r\n\r\n              <View className = \"h-[80%] w-[80%] bg-white justify-center self-center p-4\">\r\n\r\n                <ScrollView>\r\n                  <Text className = \"text-black text-base text-center\">{note}</Text>\r\n                </ScrollView>\r\n\r\n              </View>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[30%] items-center\">\r\n                \r\n              <View className = \"flex-row w-full h-[50%] justify-evenly\">\r\n                <View className = \"w-[40%] h-[50%] bg-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleCopy}>\r\n                    <Text className = \"text-white text-xl text-center\">Copy</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleSave}>\r\n                    <Text className = \"text-black text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[50%] w-full justify-center items-center\">\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-white rounded-full\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleFinished}>\r\n                    <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[10%] justify-center\">\r\n\r\n            <Text className = \"text-center text-white\">Select a Profile:</Text>\r\n\r\n            <View className = \"w-[50%] border-2 border-sky-500 bg-white self-center\">\r\n              <Picker\r\n                selectedValue={selectedProfile ? selectedProfile.profileId.toString() : ''}\r\n                onValueChange={(itemValue) => handleProfileSelect(profiles.find(item => item.profileId.toString() === itemValue))}\r\n              >\r\n                {profiles.map((item) => (\r\n                  <Picker.Item\r\n                    key={item.profileId.toString()}\r\n                    label={item.profileName}\r\n                    value={item.profileId.toString()}\r\n                  />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {selectedProfile && (\r\n          <View className = \"h-[90%] w-[75%] justify-center self-center\">\r\n\r\n            <View className = \"h-[15%] space-y-1\">\r\n              <Text className = \"text-white text-xl font-bold text-center\">Goals:</Text>\r\n              <View className = \"h-[50%] w-[75%] bg-white justify-center self-center rounded-full\">\r\n                <Text className = \"text-black text-center text-base\">{selectedProfile.profileGoals}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            {/* Basic Info*/}\r\n            <View className = \"h-[15%] space-y-1\">\r\n\r\n              <Text className = \"text-white text-xl font-bold text-center pt-2\">Medication Time:</Text>\r\n\r\n              <View className = \" bg-white m-4 p-2 justify-center rounded-2xl\">\r\n                <Text className = \"text-black\">-Morning: {selectedProfile.morningMedication ? 'Yes' : 'No'} </Text>\r\n                <Text className = \"text-black\">-Afternoon: {selectedProfile.afternoonMedication ? 'Yes' : 'No'} </Text>\r\n                <Text className = \"text-black\">-Night: {selectedProfile.nightMedication ? 'Yes' : 'No'} </Text>\r\n              </View>\r\n                \r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%] space-y-1 pt-8\">\r\n\r\n              <Text className = \"text-white text-xl font-bold text-center\">Activities:</Text>\r\n\r\n              <View className = \"h-[40%] m-4 p-2 bg-white rounded-2xl\">\r\n                <ScrollView>\r\n                  {selectedProfile.activities.map((item, index) => (\r\n                    <Text key={index} className = \"text-black text-transform: capitalize\">\r\n                      -{item}\r\n                    </Text>\r\n                  ))}\r\n                </ScrollView>\r\n              </View>\r\n\r\n              <View className = \"w-[60%] h-[30%] bg-white border-2 border-white rounded-full self-center items-center\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleToggleDayProgram}>\r\n                  <Text className = \"text-black text-xl text-center\">Day Program: {dayProgram ? 'Yes' : 'No'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[30%]\">\r\n                \r\n              <View className = \"h-full w-full items-center space-y-4\">\r\n              \r\n                <Text className=\"text-white font-bold text-xl\">Credits: {userCredits}</Text>\r\n\r\n                <View className = \"w-[50%] h-[30%] bg-white border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">Generate!</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity onPress={navigateToPurchase}>\r\n                  <Text className = \"text-white font-bold text-xl\">Buy Credits?</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>)}\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateHostHomeNotesScreen","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, FlatList, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport Modal from 'react-native-modal';\r\n\r\nconst DeleteProfileModal = ({ isVisible, onCancel, onDelete }) => {\r\n  return (\r\n    <Modal isVisible={isVisible} transparent={false}>\r\n      <View className = \"h-[75%] w-[75%] bg-white justify-center items-center self-center space-y-8\">\r\n\r\n        <Text className = \"text-black text-center text-base\">Are you sure you want to delete your profile? This action cannot be undone.</Text>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onCancel}>\r\n            <Text className = \"text-black text-center text-base\">Cancel</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 bg-red-500 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onDelete}>\r\n            <Text className = \"text-white text-center text-base\">Delete</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ViewHostHomeProfileScreen = () => {\r\n  const { profiles, selectedProfile, setSelectedProfile, updateProfile, deleteProfile } = useHostHomeProfileContext();\r\n  const [newActivity, setNewActivity] = useState('');\r\n  const navigation = useNavigation();\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (newActivity.trim() !== '') {\r\n      setSelectedProfile({ ...selectedProfile, activities: [...selectedProfile.activities, newActivity] });\r\n      setNewActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (activity) => {\r\n    const updatedActivities = selectedProfile.activities.filter((item) => item !== activity);\r\n    setSelectedProfile({ ...selectedProfile, activities: updatedActivities });\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      await updateProfile(selectedProfile);\r\n      console.log('Profile updated successfully:', selectedProfile);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProfile = async () => {\r\n    // Open the modal\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Close the modal\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    // Perform deletion logic\r\n    try {\r\n      await deleteProfile(selectedProfile.profileId);\r\n      // Add any additional logic after successful deletion\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n\r\n    // Close the modal\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleGenderToggle = () => {\r\n    setSelectedProfile(prevProfile => ({\r\n      ...prevProfile,\r\n      profileGender: prevProfile.profileGender === 'Male' ? 'Female' : 'Male',\r\n    }));\r\n  };  \r\n\r\n  const navigateToCreate = () => {\r\n    navigation.navigate('CreateProfile');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[10%] space-y-2\">\r\n\r\n            <View className = \"absolute inset-x-0 bottom-0\">\r\n\r\n              <Text className = \"text-center text-white\">Select a Profile:</Text>\r\n\r\n              <View className = \"flex-row justify-center space-x-2\">\r\n                <View className = \"w-[60%] h-full border-2 border-sky-500 bg-white self-center \">\r\n                  <Picker\r\n                    selectedValue={selectedProfile ? selectedProfile.profileId.toString() : ''}\r\n                    onValueChange={(itemValue) => handleProfileSelect(profiles.find(item => item.profileId.toString() === itemValue))}\r\n                  >\r\n                    {profiles.map((item) => (\r\n                      <Picker.Item\r\n                        key={item.profileId.toString()}\r\n                        label={item.profileName}\r\n                        value={item.profileId.toString()}\r\n                      />\r\n                    ))}\r\n                  </Picker>\r\n                </View>\r\n\r\n                <View className = \"w-[20%] h-[100%] bg-white border-2 border-green-500 rounded-full justify-center\">\r\n                  <TouchableOpacity onPress={navigateToCreate}> \r\n                    <Text className = \"text-black text-base text-center\">Add New</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {!selectedProfile && (\r\n            <View className = \"h-[85%] justify-center\">\r\n\r\n              <View className = \"items-center\">\r\n                <Text className = \"text-white text-2xl m-2\">Click 'Add New' to create your first profile! </Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n\r\n          {selectedProfile && (\r\n          <View className = \"h-[85%]\">\r\n\r\n            <DeleteProfileModal\r\n              isVisible={isModalVisible}\r\n              onCancel={handleCancel}\r\n              onDelete={handleConfirmDelete}\r\n            />\r\n\r\n            {/* Basic Info*/}\r\n            <View className = \"h-[30%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base\">Name</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Profile Name\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={selectedProfile.profileName}\r\n                  onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileName: text })}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n              <Text className = \"text-white text-base\">Gender</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity onPress={handleGenderToggle}> \r\n                  <Text className = \"text-black text-base text-center\">{selectedProfile.profileGender}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <Text className = \"text-white text-base\">Goals</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Profile Goals\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={selectedProfile.profileGoals}\r\n                  onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileGoals: text })}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n            </View>\r\n\r\n            {/* Medications */}\r\n            \r\n            <View className = \"h-[20%]\">\r\n              <Text className = \"text-white text-xl text-center\">Medication Time:</Text>\r\n\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n                {selectedProfile.morningMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, morningMedication: !selectedProfile.morningMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, morningMedication: !selectedProfile.morningMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {selectedProfile.afternoonMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, afternoonMedication: !selectedProfile.afternoonMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, afternoonMedication: !selectedProfile.afternoonMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {selectedProfile.nightMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, nightMedication: !selectedProfile.nightMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, nightMedication: !selectedProfile.nightMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%]\">\r\n              <View className = \"flex-row h-[20%] justify-evenly items-center my-2\">\r\n\r\n                <View className = \"w-[60%] h-[100%] bg-white rounded-full\">\r\n                  <TextInput\r\n                    className=\"h-full w-full text-black text-base text-center\"\r\n                    placeholder=\"Add Activity\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setNewActivity(text)}\r\n                    value={newActivity}\r\n                    secureTextEntry={false}\r\n                  />\r\n                </View>\r\n                <View className = \"w-[30%] h-[100%] border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleAddActivity}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[60%] bg-white border-2 border-white rounded-2xl py-2 m-4\">\r\n                <FlatList\r\n                  data={selectedProfile.activities}\r\n                  renderItem={({ item, index }) => (\r\n                    <ScrollView>\r\n                      <View className = \"flex-row\">\r\n\r\n                        <Text className = \"w-[75%] text-center text-black\">{item}</Text>\r\n\r\n                        <View className = \"w-[25%]\">\r\n                          <TouchableOpacity className=\"w-full h-full justify-center\" onPress={() => handleDeleteActivity(item)}>\r\n                            <Text className=\"text-red-500 text-base text-center\">X</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n\r\n                      </View>\r\n                    </ScrollView>\r\n                  )}\r\n                  keyExtractor={(item, index) => index.toString()}\r\n                />\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[10%]\">\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n\r\n                <View className = \"w-[30%] h-[75%] bg-white/20 border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleUpdateProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Update</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[30%] h-[75%] bg-red-500 border-2 border-red-500 rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleDeleteProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                \r\n              </View>\r\n            </View>\r\n\r\n          </View>)}\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ViewHostHomeProfileScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst DispositionContainer = ({ dispositions, selectedDisposition, toggleDisposition }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const filteredDispositions = dispositions.filter(disposition =>\r\n    disposition.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <TextInput\r\n        className=\"bg-white border-gray-400 border-2 max-h-[30%] w-[85%] self-center m-2 text-center\"\r\n        placeholder=\"Search\"\r\n        placeholderTextColor={'gray'}\r\n        onChangeText={setSearchTerm}\r\n        value={searchTerm}\r\n      />\r\n\r\n      <ScrollView>\r\n      {filteredDispositions.map((item, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          style={[\r\n            styles.dispositionButton,\r\n            selectedDisposition === item && styles.selectedDispositionButton\r\n          ]}\r\n          onPress={() => toggleDisposition(item)}\r\n        >\r\n          <Text className=\"text-black\">{item}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DispositionContainer;\r\n\r\nconst styles = {\r\n  dispositionButton: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    margin: 5,\r\n  },\r\n  selectedDispositionButton: {\r\n    backgroundColor: 'lightblue',\r\n  },\r\n};\r\n","import React, { useState } from 'react'\r\nimport { View, Text, ScrollView, TouchableOpacity, Alert} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useUserContext } from '../../components/UserContext';\r\nimport { useTherapistProfileContext } from '../../components/TherapistProfileContext';\r\nimport DispositionContainer from '../../components/DispositionContainer';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Clipboard from 'expo-clipboard';\r\n\r\nconst behaviorDispositions = [\r\n  'Aggressive', 'Angry', 'Bored', 'Bright', 'Calm', 'Confused',\r\n  'Defiant', 'Depressed', 'Disgusted', 'Ecstatic', 'Enraged', 'Exhausted',\r\n  'Flat', 'Frightened', 'Frustrated', 'Happy', 'Lonely', 'Overwhelmed',\r\n  'Playful', 'Sad', 'Shy', 'Subdued', 'Suspicious', 'Talkative'\r\n];\r\n\r\nconst interventionDispositions = [\r\n  'ADHD', 'Anger', 'Anxiety', 'Communication Skills', 'Conduct disorder', 'Depression', 'Drug use', 'Emotional Spirals',\r\n  'Externalizing Behaviors', 'Family Conflicts', 'Grief/Loss Unresolved', 'Identifying Activating Events', 'Impulsivity', 'Internalizing Behaviors ',\r\n  'Low Self-Esteem ', 'Oppositional Defiant Disorder', 'Parenting', 'Positive Qualities Record', 'PTSD', 'Relationship Issues', 'Self Compassion', 'Self-Defeating Behavior',\r\n  'Self-Mutilation', 'Stress', 'Truancy',\r\n];\r\n\r\nconst GenerateTherapistNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const {\r\n    note, \r\n    setNote, \r\n    behavior,\r\n    setBehavior,\r\n    intervention,\r\n    setIntervention,\r\n    response,\r\n    setResponse,\r\n    plan,\r\n    setPlan \r\n  } = useTherapistProfileContext();\r\n  const { userCredits, setUserCredits, profileOwner, serverURL} = useUserContext();\r\n  const [selectedBehaviorDispositions, setSelectedBehaviorDispositions] = useState('');\r\n  const [selectedInterventionDispositions, setSelectedInterventionDispositions] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const toggleBehaviorDisposition = (disposition) => {\r\n    setSelectedBehaviorDispositions(disposition);\r\n  };\r\n  \r\n  const toggleInterventionDisposition = (disposition) => {\r\n    setSelectedInterventionDispositions(disposition);\r\n  };\r\n  \r\n  const handleGenerate = async () => {\r\n    if (selectedBehaviorDispositions.length === 0 || selectedInterventionDispositions.length === 0) {\r\n      console.error('Error: Please select at least one disposition.');\r\n      return;\r\n    }\r\n\r\n    if (userCredits === 0) {\r\n      console.error('Error: Please purchase more credits to continue.');\r\n      return;\r\n    }\r\n\r\n    //Start Loading\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedBehaviorDispositions,\r\n          selectedInterventionDispositions\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(true);\r\n        setBehavior(data.behavior);\r\n        setIntervention(data.intervention);\r\n        setResponse(data.response)\r\n        setPlan(data.plan)\r\n        setUserCredits(data.remainingCredits);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleCopy = async (text) => {\r\n    await Clipboard.setStringAsync(text);\r\n    Alert.alert('Saved!', 'item has been saved');\r\n  }\r\n\r\n  const getCurrentDate = () => {\r\n    const currentDate = new Date();\r\n    const month = currentDate.getMonth() + 1; // Months are zero-based\r\n    const day = currentDate.getDate();\r\n    const year = currentDate.getFullYear();\r\n\r\n    return `${String(month).padStart(2, '0')}/${String(day).padStart(2, '0')}/${year}`;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const formattedDate = getCurrentDate();\r\n      const filename = `${formattedDate}.txt`;\r\n      const combinedText = `Behavior\\n\\n${behavior}\\n\\nIntervention\\n\\n${intervention}\\n\\nResponse\\n\\n${response}\\n\\nPlan\\n\\n${plan}`;\r\n\r\n      // Create a Blob containing the text\r\n      const blob = new Blob([combinedText], { type: 'text/plain' });\r\n\r\n      // Create a download link and trigger a click event to download the file\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = filename;\r\n      link.click();\r\n    } catch (error) {\r\n      console.error('Error saving file:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  const handleFinished = () => {\r\n    setSelectedBehaviorDispositions('');\r\n    setSelectedInterventionDispositions('');\r\n    setNote(false);\r\n    setBehavior('');\r\n    setIntervention('');\r\n    setResponse('');\r\n    setPlan('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[60%] justify-center\">\r\n\r\n              <Text className = \"text-white text-3xl text-center\">Generating Note..</Text>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base text-center\">We accept 07</Text>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (note) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[60%]\">\r\n\r\n              <View className = \"h-[80%] w-[80%] bg-white justify-center self-center p-4\">\r\n\r\n                <ScrollView>\r\n                  <View className = \"w-full h-full justify-center items-center my-2 space-y-4\">\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Behavior</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className=\"w-full h-full justify-center\" onPress={() => handleCopy(behavior)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{behavior}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Intervention</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(intervention)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{intervention}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Response</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(response)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{response}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Plan</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(plan)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{plan}</Text>\r\n\r\n                  </View>\r\n                </ScrollView>\r\n\r\n              </View>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[30%] items-center\">\r\n                \r\n              <View className = \"flex-row w-full h-[50%] justify-evenly\">\r\n                <View className = \"w-[40%] h-[50%] bg-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleSave}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">New</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[50%] w-full justify-center items-center\">\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-white rounded-full\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleFinished}>\r\n                    <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[100%]\">\r\n\r\n            <View className = \"h-[5%]\"/>\r\n\r\n            <Text className = \"text-white text-xl text-center\">Behavior</Text>\r\n\r\n            <View className = \"h-[25%] w-[50%] space-y-1 self-center\">\r\n\r\n              <DispositionContainer\r\n                dispositions={behaviorDispositions}\r\n                selectedDisposition={selectedBehaviorDispositions}\r\n                toggleDisposition={toggleBehaviorDisposition}\r\n              />\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[5%]\"/>\r\n\r\n            <Text className = \"text-white text-xl text-center\">Intervention</Text>\r\n\r\n            <View className = \"h-[25%] w-[50%] space-y-1 self-center\">\r\n\r\n              <DispositionContainer\r\n                dispositions={interventionDispositions}\r\n                selectedDisposition={selectedInterventionDispositions}\r\n                toggleDisposition={toggleInterventionDisposition}\r\n              />\r\n\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[30%]\">\r\n                \r\n              <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n                <Text className=\"text-white font-bold text-xl\">Credits: {userCredits}</Text>\r\n\r\n                <View className = \"w-[50%] h-[30%] bg-white border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">Generate!</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <TouchableOpacity onPress={navigateToPurchase}>\r\n                  <Text className = \"text-white font-bold text-xl\">Buy Credits?</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateTherapistNotesScreen","import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { signOut } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useUserContext } from '../../components/UserContext';\r\n\r\nconst SettingsScreen = () => {\r\n  const { formattedBillingCycleEnd,\r\n    status,\r\n    maxCredits,\r\n    tier, \r\n    businessName,\r\n    profession,\r\n  } = useUserContext();\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n            <View className = \"h-[20%] w-[80%]\">\r\n\r\n              {status === 'active' && (\r\n                <>\r\n                  <View className = \"bg-white h-full w-full justify-evenly items-center rounded-2xl\">\r\n                  <Text className = \"text-black text-xl\">Subscription Tier: ({tier})</Text>\r\n                  <Text className = \"text-black text-xl\">Status: {status}</Text>\r\n                  <Text className = \"text-black text-xl\">Credits: {maxCredits}</Text>\r\n                  <Text className = \"text-black text-xl\">End Date: {formattedBillingCycleEnd} </Text>\r\n                  </View>\r\n                </>\r\n              )}\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[40%] w-full justify-center items-center space-y-2\">\r\n\r\n              <Text className = \"text-white text-xl text-center\">Profession: {profession}</Text>\r\n\r\n              {businessName && (\r\n                <Text className=\"text-white text-xl text-center\">Business: {businessName}</Text>\r\n              )}\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] w-full items-center\">\r\n            <Text className = \"text-white text-xl text-center\">Contact Us:</Text>\r\n              <Text className = \"text-white text-xl text-center\">Email: easyetchsupport@gmail.com</Text>\r\n              <Text className = \"text-white text-xl text-center pb-4\">Phone: (404) 518-9797</Text>\r\n              <View className = \"w-[75%] h-[50%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity onPress={handleSignOut}> \r\n                  <Text className = \"text-black text-base text-center\">Sign Out</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;\r\n","import React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useUserContext } from '../../components/UserContext';\r\n\r\nconst PurchaseScreen = () => {\r\n  const { profession, status, tier } = useUserContext();\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [creditPrice, setCreditPrice] = useState(5.99);\r\n\r\n  const handlePurchase = async (productTitle) => {\r\n    try {\r\n\r\n      if (productTitle === 'Credits1' && quantity === 0) {\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${serverURL}/common/checkout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          quantity: quantity,\r\n          productTitle: productTitle,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        navigation.navigate('StripeCheckout', { checkoutUrl: data.url });\r\n      } else {\r\n        console.log('Unable to connect to stripe.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during checkout:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToGenerate = async () => {\r\n    navigation.goBack();\r\n  };  \r\n\r\n  const handleInputChange = (text) => {\r\n    if (/^\\d+$/.test(text)) {\r\n      setQuantity(text);\r\n      calculatePrice(text);\r\n    } else {\r\n      setQuantity('');\r\n      setPrice(0);\r\n    }\r\n  };\r\n\r\n  const calculatePrice = (text) => {\r\n    const parsedQuantity = parseInt(text, 10);\r\n    const calculatedPrice = parsedQuantity * creditPrice;\r\n    setPrice(calculatedPrice);\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"w-full h-full justify-center items-center space-y-2\">\r\n\r\n            {/* Header */}\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            {/*Sub Info*/}\r\n            <View className = \"h-[40%] w-[80%]\">\r\n\r\n              <View className=\"w-full h-full\">\r\n\r\n                <Text className = \"text-white text-2xl font-bold text-center\">Subscriptions (30 days)</Text>\r\n\r\n                {/* Therapist */}\r\n                {profession === \"Therapist\" && (\r\n\r\n                  <View className = \"w-full h-full justify-evenly\">\r\n\r\n                    {status === 'active' && tier === 1 ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 1</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 120</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('T-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 1</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 120</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$200</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )}\r\n\r\n                    {/* {status === 'active' && tier === 2 ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 2</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 100</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('T-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 2</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 100</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$200</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )}\r\n\r\n                    {status === 'active' && tier === 3 ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 3</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 150</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('T-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 3</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 150</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$300</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )} */}\r\n\r\n                  </View>\r\n                )}\r\n\r\n                {/* Host Homes */}\r\n                {profession === \"Host Home\" && (\r\n\r\n                  <View className = \"w-full h-full justify-evenly\">\r\n\r\n                    {status === 'active' && tier === 1 ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Tier 1</Text>\r\n                          <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 31</Text>\r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('HH-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 1</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 31</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$50</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )}\r\n\r\n                    {status === 'active' && tier === 2 ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Tier 2</Text>\r\n                          <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 62</Text>\r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('HH-Tier-2')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[20%] text-black text-base text-center\">Tier 2</Text>\r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 62</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$100</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )}\r\n\r\n                  </View>\r\n                  )}\r\n                </View>\r\n              \r\n            </View>\r\n\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <Text className = \"text-white text-2xl font-bold text-center\">1 Credit = 1 Note</Text>\r\n            <Text className = \"text-white text-2xl font-bold text-center\">{creditPrice}</Text>\r\n\r\n            {/* Credits */}\r\n            <View className = \"h-[40%] w-full items-center\">\r\n\r\n              <View className = \"w-[75%] h-[50%]\">\r\n\r\n                <View className = \"flex-row w-full h-[50%] justify-center items-center bg-white border-black border-2\">\r\n\r\n                  <Text className = \"w-[30%] text-black text-base text-center\">Buy Credits?</Text>\r\n\r\n                  <TextInput className = \"w-[40%] h-full border-2 border-black/10 text-center\"\r\n                    keyboardType=\"numeric\"\r\n                    placeholder=\"Enter Amount\"\r\n                    value={quantity}\r\n                    onChangeText={handleInputChange}\r\n                  />\r\n\r\n                  <TouchableOpacity className = \"w-[30%] h-full justify-center items-center\" onPress={() => handlePurchase('Credits1')}>\r\n                    <View className = \"w-[75%] h-[80%] justify-center items-center rounded-2xl bg-green-200\"> \r\n                      <Text className = \"text-black text-base text-center\">${price.toFixed(2)}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                  \r\n                </View>\r\n                \r\n              </View>\r\n\r\n              <View className = \"w-[40%] h-[20%] bg-white rounded-full justify-center items-center\">\r\n                <TouchableOpacity className = \"justify-center\" onPress={navigateToGenerate}>\r\n                    <Text className = \" text-black text-base text-center\">Go Back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>\r\n\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PurchaseScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst StripeCheckoutScreen = ({ route }) => {\r\n  const { checkoutUrl } = route.params;\r\n  const [result, setResult] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const openBrowserAsync = async () => {\r\n      try {\r\n        let result = await WebBrowser.openBrowserAsync(checkoutUrl);\r\n        setResult(result);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    openBrowserAsync();\r\n    navigation.navigate('Purchase');\r\n  }, [checkoutUrl]); \r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text>{result && JSON.stringify(result)}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutScreen;\r\n","import React from 'react';\r\nimport { Image } from 'react-native';\r\nimport { useUserContext } from '../components/UserContext';\r\nimport { HostHomeProfileProvider } from '../components/HostHomeProfileContext'\r\nimport { TherapistProfileProvider } from '../components/TherapistProfileContext'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport CreateHostHomeProfileScreen from './HostHomeScreens/CreateHostHomeProfileScreen'\r\nimport GenerateHostHomeNotesScreen from './HostHomeScreens/GenerateHostHomeNotesScreen'\r\nimport ViewHostHomeProfileScreen from './HostHomeScreens/ViewHostHomeProfileScreen'\r\nimport GenerateTherapistNotesScreen from './TherapistScreens/GenerateTherapistNotesScreen'\r\nimport SettingsScreen from './CommonScreens/SettingsScreen';\r\nimport PurchaseScreen from './CommonScreens/PurchaseScreen'\r\nimport StripeCheckoutScreen from './CommonScreens/StripeCheckoutScreen'\r\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst UserNavigator = () => {\r\n  const { profession, profileOwner } = useUserContext();\r\n\r\n  const Stack = createNativeStackNavigator();\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  const HostHomeStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateHostHome\" component={GenerateHostHomeNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  const TherapistStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateTherapist\" component={GenerateTherapistNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  const HostHomeProfileStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"ViewProfile\" component={ViewHostHomeProfileScreen}/>\r\n        <Stack.Screen name=\"CreateProfile\" component={CreateHostHomeProfileScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  if (profession === 'Host Home') {\r\n\r\n    return (\r\n      <HostHomeProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator \r\n          initialRouteName=\"Profiles\"\r\n          screenOptions={{\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n              backgroundColor: 'white',\r\n              borderColor: 'black',\r\n              width: wp(100),\r\n              maxWidth: 1080,\r\n              alignSelf: 'center',\r\n          },\r\n          tabBarIconStyle: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n            \r\n          }}>\r\n          <Tab.Screen \r\n            name=\"Generate\" \r\n            component={HostHomeStack} \r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/edit.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}/>\r\n          <Tab.Screen \r\n            name=\"Profiles\" \r\n            component={HostHomeProfileStack} \r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/user.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen \r\n            name=\"Settings\" \r\n            component={SettingsScreen}\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/settings.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}/>\r\n        </Tab.Navigator>\r\n      </HostHomeProfileProvider>\r\n    );\r\n\r\n  } else if (profession === 'Therapist') {\r\n\r\n    return (\r\n      <TherapistProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator \r\n          initialRouteName=\"Generate\"\r\n          screenOptions={{\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n              backgroundColor: 'white',\r\n              borderColor: 'black',\r\n              width: wp(100),\r\n              maxWidth: 1080,\r\n              alignSelf: 'center',\r\n          },\r\n          tabBarIconStyle: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n            \r\n          }}>\r\n            <Tab.Screen \r\n              name=\"Generate\" \r\n              component={TherapistStack} \r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <Image\r\n                    source={require('../../assets/navicons/edit.png')}\r\n                    style={{ width: size, height: size, tintColor: color }}\r\n                  />\r\n                ),\r\n              }}/>\r\n            <Tab.Screen \r\n              name=\"Settings\" \r\n              component={SettingsScreen} \r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <Image\r\n                    source={require('../../assets/navicons/settings.png')}\r\n                    style={{ width: size, height: size, tintColor: color }}\r\n                  />\r\n                ),\r\n              }}/>\r\n        </Tab.Navigator>\r\n      </TherapistProfileProvider>\r\n    );\r\n  } \r\n  return null;\r\n};\r\n\r\nexport default UserNavigator;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useServerContext } from '../components/ServerContext';\r\nimport { BusinessProvider } from '../components/BusinessContext';\r\nimport { UserProvider } from '../components/UserContext';\r\nimport BusinessNavigator from './BusinessNavigator';\r\nimport UserNavigator from './UserNavigator';\r\n\r\nconst MainNavigator = () => {\r\n  const { accountType, profileOwner } = useServerContext();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (accountType !== null) {\r\n      setLoading(false);\r\n    }\r\n  }, [accountType]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n            <View className = \"h-full w-full justify-center\">\r\n            <Text className = \"text-white text-3xl text-center\">Loading.. Please wait</Text>\r\n            </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n    );\r\n  }\r\n\r\n  if (accountType === 'Business') {\r\n\r\n    return (\r\n      <BusinessProvider profileOwner={profileOwner}>\r\n        <BusinessNavigator/>\r\n      </BusinessProvider>\r\n    );\r\n  } else if (accountType === 'User') {\r\n\r\n    return (\r\n      <UserProvider profileOwner={profileOwner}> \r\n        <UserNavigator/>\r\n      </UserProvider>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MainNavigator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../components/FirebaseConfig';\r\nimport { ServerURLProvider } from '../components/ServerURLContext';\r\nimport { ServerProvider } from '../components/ServerContext';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport SignInScreen from './AuthScreens/SignInScreen';\r\nimport SignUpScreen from './AuthScreens/SignUpScreen';\r\nimport ForgotPasswordScreen from './AuthScreens/ForgotPasswordScreen';\r\nimport MainNavigator from './MainNavigator';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst RootNavigator = () => {\r\n  \r\n  const serverURL = 'https://easyetch.onrender.com';\r\n\r\n  // Production: 'https://easyetch.onrender.com';\r\n  // Testing: 'http://10.0.0.70:5000'\r\n\r\n  const [profileOwner, setProfileOwner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(FIREBASE_AUTH, async (user) => {\r\n      if (user && user.emailVerified) {\r\n        setProfileOwner(user.email);\r\n      } else {\r\n        setProfileOwner(null);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <ServerURLProvider serverURL={serverURL}> \r\n      <NavigationContainer>\r\n        {profileOwner ? (\r\n        <ServerProvider profileOwner={profileOwner}>\r\n          <MainNavigator />\r\n        </ServerProvider>\r\n        ) : (\r\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\r\n            <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </ServerURLProvider>\r\n  );\r\n};\r\n\r\nexport default RootNavigator;\r\n","import { NativeWindStyleSheet } from \"nativewind\";\r\nimport RootNavigator from \"./src/screens/RootNavigator\";\r\n\r\nNativeWindStyleSheet.setOutput({\r\n  default: \"native\",\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <RootNavigator />\r\n  );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [40], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FIREBASE_APP","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_AUTH","getAuth","ServerURLContext","createContext","useServerURL","useContext","ServerURLProvider","_ref","children","serverURL","_jsx","Provider","value","ServerContext","ServerProvider","profileOwner","_useState","useState","_useState2","_slicedToArray","accountType","setAccountType","fetchAccountType","_ref2","_asyncToGenerator","response","fetch","data","json","error","console","_x","apply","arguments","useEffect","fetchData","_ref3","navigation","useNavigation","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isPasswordVisible","setIsPasswordVisible","_useState7","_useState8","setError","handleSignIn","auth","signInWithEmailAndPassword","user","emailVerified","signOut","_StyledComponent","className","component","View","_jsxs","colors","LinearGradient","source","require","Image","Text","placeholder","placeholderTextColor","onChangeText","text","secureTextEntry","TextInput","TouchableOpacity","style","position","right","top","transform","translateY","onPress","width","height","navigate","_NativeWindStyleSheet","create","styles","_useState9","_useState10","canSignIn","setCanSignIn","_useState11","_useState12","businessType","setBusinessType","_useState13","_useState14","userType","setUserType","_useState15","_useState16","workForBusiness","setWorkForBusiness","_useState17","_useState18","businessName","setBusinessName","_useState19","_useState20","userAmount","setUserAmount","togglePasswordVisibility","navigateToSignIn","handleSignup","method","headers","body","JSON","stringify","ok","sendEmailVerification","currentUser","status","message","signUpResult","success","ScrollView","hp","_Fragment","atRules","childClasses","emailSent","setEmailSent","handlePasswordReset","sendPasswordResetEmail","BusinessContext","BusinessProvider","currentUsers","setCurrentUsers","credits","setCredits","fetchBusinessInfo","UserContext","useUserContext","UserProvider","userCredits","setUserCredits","profession","setProfession","isBusiness","setIsBusiness","formattedBillingCycleEnd","setFormattedBillingCycleEndDate","setStatus","maxCredits","setMaxCredits","tier","setTier","subscriptionType","setSubscriptionType","fetchUserInfo","userInfo","_data$userInfo","fetchUserSubscription","log","_data$userInfo2","_data$subData","subData","billingCycleEnd","billingCycleEndDate","Date","_seconds","month","getMonth","toString","padStart","day","getDate","year","getFullYear","_x2","_x3","_ref4","handleSignOut","Tab","createBottomTabNavigator","Navigator","initialRouteName","screenOptions","headerShown","tabBarStyle","backgroundColor","borderColor","wp","maxWidth","alignSelf","tabBarIconStyle","alignItems","justifyContent","Screen","name","ViewBusiness","options","tabBarIcon","color","size","tintColor","HostHomeProfileContext","useHostHomeProfileContext","HostHomeProfileProvider","profiles","setProfiles","selectedProfile","setSelectedProfile","note","setNote","dayProgram","setDayProgram","fetchProfiles","Error","createProfile","newProfileData","_objectSpread","concat","_toConsumableArray","updateProfile","updatedProfile","profileId","updatedProfileData","updatedProfiles","map","profile","deleteProfile","_ref5","filter","length","_x4","_ref6","profilesData","TherapistProfileContext","TherapistProfileProvider","behavior","setBehavior","intervention","setIntervention","setResponse","plan","setPlan","profileName","setProfileName","profileGender","setProfileGender","profileGoals","setProfileGoals","morningMedication","setMorningMedication","afternoonMedication","setAfternoonMedication","nightMedication","setNightMedication","activity","setActivity","activities","setActivities","handleProfileCreation","trim","navigateToView","prevGender","prevActivities","FlatList","renderItem","item","index","_","i","handleDeleteActivity","keyExtractor","_useHostHomeProfileCo","_useUserContext","loading","setLoading","handleCopy","Clipboard","setStringAsync","Alert","alert","handleGenerate","generatedText","remainingCredits","handleSave","formattedDate","currentDate","String","getCurrentDate","filename","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click","Picker","selectedValue","onValueChange","itemValue","find","Item","label","DeleteProfileModal","isVisible","onCancel","onDelete","Modal","transparent","newActivity","setNewActivity","isModalVisible","setModalVisible","handleUpdateProfile","handleDeleteProfile","handleConfirmDelete","prevProfile","updatedActivities","dispositions","selectedDisposition","toggleDisposition","searchTerm","setSearchTerm","filteredDispositions","disposition","toLowerCase","includes","flex","dispositionButton","selectedDispositionButton","padding","margin","behaviorDispositions","interventionDispositions","_useTherapistProfileC","selectedBehaviorDispositions","setSelectedBehaviorDispositions","selectedInterventionDispositions","setSelectedInterventionDispositions","combinedText","DispositionContainer","quantity","setQuantity","price","setPrice","creditPrice","handlePurchase","productTitle","url","checkoutUrl","navigateToGenerate","goBack","calculatePrice","parsedQuantity","parseInt","keyboardType","test","toFixed","route","params","result","setResult","openBrowserAsync","WebBrowser","Stack","createNativeStackNavigator","GenerateHostHomeNotesScreen","PurchaseScreen","StripeCheckoutScreen","ViewHostHomeProfileScreen","CreateHostHomeProfileScreen","SettingsScreen","GenerateTherapistNotesScreen","_useServerContext","BusinessNavigator","UserNavigator","setProfileOwner","unsubscribe","onAuthStateChanged","NavigationContainer","MainNavigator","SignInScreen","SignUpScreen","ForgotPasswordScreen","App","RootNavigator","NativeWindStyleSheet","setOutput","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}