{"version":3,"file":"static/js/main.57cb1a5c.js","mappings":"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","sources":["src/components/FirebaseConfig.js","src/components/ServerURLContext.js","src/components/ServerContext.js","src/screens/AuthScreens/SignInScreen.js","src/screens/AuthScreens/SignUpScreen.js","src/screens/AuthScreens/ForgotPasswordScreen.js","src/components/BusinessContext.js","src/components/UserContext.js","src/screens/BusinessScreens/ViewBusiness.js","src/screens/BusinessScreens/BusinessPurchaseScreen.js","src/screens/CommonScreens/StripeCheckoutScreen.js","src/screens/BusinessNavigator.js","src/components/HostHomeProfileContext.js","src/components/TherapistProfileContext.js","src/screens/HostHomeScreens/CreateHostHomeProfileScreen.js","src/screens/HostHomeScreens/GenerateHostHomeNotesScreen.js","src/screens/HostHomeScreens/ViewHostHomeProfileScreen.js","src/components/DispositionContainer.js","src/screens/TherapistScreens/GenerateTherapistNotesScreen.js","src/screens/CommonScreens/SettingsScreen.js","src/screens/CommonScreens/PurchaseScreen.js","src/screens/UserNavigator.js","src/screens/MainNavigator.js","src/screens/RootNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBQuUaG_jhfDZpKTdEX2bDQi184lRiBFzg\",\r\n  authDomain: \"easyetch-2764f.firebaseapp.com\",\r\n  projectId: \"easyetch-2764f\",\r\n  storageBucket: \"easyetch-2764f.appspot.com\",\r\n  messagingSenderId: \"429626063303\",\r\n  appId: \"1:429626063303:web:e163bac12113c7b43c01e2\"\r\n};\r\n\r\n// initialize Firebase App\r\nconst FIREBASE_APP = initializeApp(firebaseConfig);\r\nconst FIREBASE_AUTH = getAuth(FIREBASE_APP);\r\n\r\nexport { FIREBASE_APP, FIREBASE_AUTH};","import React, { createContext, useContext } from 'react';\r\n\r\nconst ServerURLContext = createContext();\r\n\r\nexport const useServerURL = () => {\r\n  return useContext(ServerURLContext);\r\n};\r\n\r\nexport const ServerURLProvider = ({ children, serverURL }) => {\r\n  return (\r\n    <ServerURLContext.Provider value={serverURL}>\r\n      {children}\r\n    </ServerURLContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst ServerContext = createContext();\r\n\r\nexport const useServerContext = () => {\r\n  return useContext(ServerContext);\r\n};\r\n\r\nexport const ServerProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [accountType, setAccountType] = useState(null);\r\n\r\n  const fetchAccountType = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/common/getAccountType?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      setAccountType(data.accountType);\r\n    } catch (error) {\r\n      console.error('Error fetching account type:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchAccountType(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching account data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <ServerContext.Provider \r\n      value={{ \r\n          accountType,\r\n          serverURL,\r\n          profileOwner,\r\n        }}>\r\n      {children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Image, Text, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst SignInScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSignIn = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      const credentials = await signInWithEmailAndPassword(auth, email, password);\r\n\r\n      if (!credentials.user.emailVerified) {\r\n        setError('Please verify your email before logging in.');\r\n        await signOut(FIREBASE_AUTH);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error signing in:', error);\r\n      setError('Invalid email or password.');\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const navigateToSignUp = () => {\r\n    navigation.navigate('SignUp');\r\n  };\r\n\r\n  const navigateToForgotPassword = () => {\r\n    navigation.navigate('ForgotPassword');\r\n  };\r\n\r\n  const openYoutubeVideo = async () => {\r\n    try {\r\n      await WebBrowser.openBrowserAsync('https://youtu.be/33VtnTBJcHw');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          {/* Header */}\r\n          <View className = \"h-[30%] justify-center items-center\">\r\n\r\n            {/* Logo */}\r\n            <Image \r\n              className = \"w-[60%] h-[100%] absolute\"\r\n              source={require('../../../assets/images/Logo.png')} \r\n            />\r\n\r\n          </View>\r\n\r\n          {/* Container */}\r\n          <View className = \"h-[55%] w-full justify-center items-center\">\r\n\r\n            {error && (\r\n              <Text className = \"text-red-500 text-base m-2\">{error}</Text>\r\n            )}\r\n\r\n            <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n              <TextInput\r\n                  className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                  placeholder=\"Email\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setEmail(text)}\r\n                  value={email}\r\n                  secureTextEntry={false}\r\n              />\r\n            </View>\r\n\r\n            <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                <TextInput\r\n                    className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                    placeholder=\"Password\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    secureTextEntry={!isPasswordVisible}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                  style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                  onPress={togglePasswordVisibility}\r\n                >\r\n                  <Image\r\n                    source={require('../../../assets/password.png')}\r\n                    style={{ width: 25, height: 25 }}\r\n                  />\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n            \r\n\r\n            <View className=\"w-[50%] h-[15%] border-white border-2 bg-sky-400/50 rounded-xl justify-center my-2\">\r\n              <TouchableOpacity onPress={handleSignIn}>\r\n                  <Text className=\"text-white text-xl text-center\">Sign In</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View className=\"w-[50%] h-[15%] border-sky-500 border-2 bg-white rounded-xl justify-center my-2\">\r\n                <TouchableOpacity onPress={navigateToSignUp}>\r\n                    <Text className=\"text-sky-500 text-xl text-center\">Sign Up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {/* Footer */}\r\n          <View className = \"h-[15%] justify-evenly items-center\">\r\n\r\n            <TouchableOpacity onPress={navigateToForgotPassword}>\r\n              <Text className = \"text-white text-2xl\">Forgot password?</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={openYoutubeVideo}>\r\n              <Text className = \"text-white text-2xl\">Need help?</Text>\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Image, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { signInWithEmailAndPassword, sendEmailVerification, signOut } from 'firebase/auth';\r\n\r\nconst SignUpScreen = () => {\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [canSignIn, setCanSignIn] = useState(true);\r\n\r\n  const [businessType, setBusinessType] = useState('Individual');\r\n  const [userType, setUserType] = useState('Host Home');\r\n  const [workForBusiness, setWorkForBusiness] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const [businessName, setBusinessName] = useState('');\r\n  const [userAmount, setUserAmount] = useState('');\r\n  \r\n  const togglePasswordVisibility = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const navigateToSignIn = async () => {\r\n    if (canSignIn) {\r\n      navigation.navigate('SignIn');\r\n    }\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    setCanSignIn(false);\r\n  \r\n    // Validation checks\r\n    if (!email || !password) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (workForBusiness && (!businessName || !firstName || !lastName)) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const endpoint = businessType === 'Individual' ? 'user/signup' : 'business/signup';\r\n      const requestBody = businessType === 'Individual' ? { email, password, userType, businessName, firstName, lastName } : { email, password, businessName, userAmount };\r\n  \r\n      const response = await fetch(`${serverURL}/${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const { message = `Email already in use. If you just verified your email, click 'Go Back' then sign in!` } = await response.json();\r\n        setCanSignIn(true);\r\n        throw new Error(message);\r\n      }\r\n  \r\n      await signInWithEmailAndPassword(FIREBASE_AUTH, email, password);\r\n      await sendEmailVerification(FIREBASE_AUTH.currentUser);\r\n      setError('An email verification has been sent to your email address.');\r\n      await signOut(FIREBASE_AUTH);\r\n      setCanSignIn(true);\r\n    } catch (error) {\r\n      console.error('Error signing up:', error.message);\r\n      setError(error.message);\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"flex-1\"\r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n            <View className = \"h-full w-[75%] self-center\">\r\n\r\n              {/* Header */}\r\n              <View className = \"h-[10%]\"/>\r\n\r\n              {/* Account Type */}\r\n              {/* <View className = \"h-[10%] w-full items-center\">\r\n\r\n                <Text className = \"text-white text-lg\">Account Type:</Text>\r\n\r\n                <View className = \"flex-row h-full w-full justify-evenly\">\r\n                  {businessType === 'Individual' ? (\r\n                    <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                      <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Individual')}>\r\n                        <Text className = \"text-white text-xl text-center\">Individual</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  ) : (\r\n                    <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                      <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Individual')}>\r\n                        <Text className = \"text-white text-xl text-center\">Individual</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n\r\n                  {businessType === 'Business' ? (\r\n                    <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                      <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Business')}>\r\n                        <Text className = \"text-white text-xl text-center\">Business</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  ) : (\r\n                    <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                      <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setBusinessType('Business')}>\r\n                        <Text className = \"text-white text-xl text-center\">Business</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n              </View> */}\r\n\r\n              {businessType === 'Individual' ? (<>\r\n\r\n                {/* Profession */}\r\n                <View className = \"h-[10%] w-full items-center\">\r\n\r\n                  <Text className = \"text-white text-lg\">Profession:</Text>\r\n\r\n                  <View className = \"flex-row h-full w-full justify-evenly\">\r\n                    {userType === 'Host Home' ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Therapist')}>\r\n                          <Text className = \"text-white text-xl text-center\">Host Home</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Host Home')}>\r\n                          <Text className = \"text-white text-xl text-center\">Host Home</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n\r\n                    {userType === 'Therapist' ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Host Home')}>\r\n                          <Text className = \"text-white text-xl text-center\">Therapist</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setUserType('Therapist')}>\r\n                          <Text className = \"text-white text-xl text-center\">Therapist</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </View> \r\n\r\n                {/* Business */}\r\n                {/* <View className = \"h-[10%] w-full items-center\">\r\n\r\n                  <Text className = \"text-white text-lg\">Do you work for a business?</Text>\r\n\r\n                  <View className = \"flex-row h-full w-full justify-evenly\">\r\n                    {workForBusiness === true ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(true)}>\r\n                          <Text className = \"text-white text-xl text-center\">Yes</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(true)}>\r\n                          <Text className = \"text-white text-xl text-center\">Yes</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n\r\n                    {workForBusiness === false ? (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-green-500 bg-green-500 rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(false)}>\r\n                          <Text className = \"text-white text-xl text-center\">No</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    ) : (\r\n                      <View className = \"w-[40%] h-[40%] border-2 border-white rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setWorkForBusiness(false)}>\r\n                          <Text className = \"text-white text-xl text-center\">No</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    )}\r\n                  </View>\r\n                </View>  */}\r\n                \r\n                {/* Error Messages */}\r\n                <View className = \"h-[5%] w-full items-center\">\r\n                  {error && (\r\n                    <Text className = \"text-red-500 text-base text-center m-2\">{error}</Text>\r\n                  )}\r\n                </View>\r\n                \r\n                {/* Input Fields */}\r\n                <View className = \"h-[30%] w-full items-center space-y-1\">\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Email\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setEmail(text)}\r\n                        value={email}\r\n                        secureTextEntry={false}\r\n                    />\r\n                  </View>\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Password\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setPassword(text)}\r\n                        value={password}\r\n                        secureTextEntry={!isPasswordVisible}\r\n                    />\r\n\r\n                    <TouchableOpacity\r\n                      style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                      onPress={togglePasswordVisibility}\r\n                    >\r\n                      <Image\r\n                        source={require('../../../assets/password.png')}\r\n                        style={{ width: 25, height: 25 }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n\r\n                  {workForBusiness === true && (\r\n                    <>\r\n                    <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                      <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Business Name\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setBusinessName(text)}\r\n                        value={businessName}\r\n                        secureTextEntry={false}\r\n                      />\r\n                    </View>\r\n                    <View className = \"flex-row justify-evenly w-[100%] h-[20%]\">\r\n                      <View className = \"w-[40%] h-[80%] bg-white/75 rounded-full justify-center my-2\">\r\n                        <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"First Name\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setFirstName(text)}\r\n                          value={firstName}\r\n                          secureTextEntry={false}\r\n                        />\r\n                      </View>\r\n                      <View className = \"w-[40%] h-[80%] bg-white/75 rounded-full justify-center my-2\">\r\n                        <TextInput\r\n                          className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                          placeholder=\"Last Name\"\r\n                          placeholderTextColor={'gray'}\r\n                          onChangeText={(text) => setLastName(text)}\r\n                          value={lastName}\r\n                          secureTextEntry={false}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                    </>\r\n                  )}\r\n                </View>\r\n              </>) : (<>\r\n\r\n                {/* Error Messages */}\r\n                <View className = \"h-[10%] w-full items-center\">\r\n                  {error && (\r\n                    <Text className = \"text-red-500 text-base text-center m-2\">{error}</Text>\r\n                  )}\r\n                </View>\r\n\r\n                {/* Input Fields */}\r\n                <View className = \"h-[30%] w-full items-center space-y-1\">\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                      className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                      placeholder=\"Business Name\"\r\n                      placeholderTextColor={'gray'}\r\n                      onChangeText={(text) => setBusinessName(text)}\r\n                      value={businessName}\r\n                      secureTextEntry={false}\r\n                    />\r\n                  </View>\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                      className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                      placeholder=\"User Amount\"\r\n                      placeholderTextColor={'gray'}\r\n                      onChangeText={(text) => setUserAmount(text)}\r\n                      value={userAmount}\r\n                      secureTextEntry={false}\r\n                    />\r\n                  </View>\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Email\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setEmail(text)}\r\n                        value={email}\r\n                        secureTextEntry={false}\r\n                    />\r\n                  </View>\r\n\r\n                  <View className = \"w-[75%] h-[20%] bg-white/75 rounded-full justify-center my-2\">\r\n                    <TextInput\r\n                        className=\"h-full w-full text-black text-xl text-center self-center\"\r\n                        placeholder=\"Password\"\r\n                        placeholderTextColor={'gray'}\r\n                        onChangeText={(text) => setPassword(text)}\r\n                        value={password}\r\n                        secureTextEntry={!isPasswordVisible}\r\n                    />\r\n\r\n                    <TouchableOpacity\r\n                      style={{ position: 'absolute', right: 20, top: '50%', transform: [{ translateY: -12.5 }] }}\r\n                      onPress={togglePasswordVisibility}\r\n                    >\r\n                      <Image\r\n                        source={require('../../../assets/password.png')}\r\n                        style={{ width: 25, height: 25 }}\r\n                      />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n\r\n                <View className = \"h-[10%]\"/>\r\n\r\n              </>)}\r\n\r\n              {/* Buttons */}\r\n\r\n              <View className = \"h-[20%] w-full flex-row justify-evenly items-center\">\r\n\r\n                <View className=\"w-[40%] h-[30%] border-white border-2 bg-sky-400/50 rounded-full justify-center\">\r\n                  <TouchableOpacity onPress={handleSignup}>\r\n                    <Text className=\"text-white text-xl text-center\">Sign Up</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[30%] bg-white border-2 border-sky-500 rounded-full justify-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={navigateToSignIn}>\r\n                    <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n              </View>\r\n            </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await sendPasswordResetEmail(auth, email);\r\n      setEmailSent(true);\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error('Error sending password reset email:', error.message);\r\n    }\r\n  };\r\n\r\n  const navigateToSignIn = () => {\r\n    navigation.navigate('SignIn');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[50%] w-full justify-center items-center space-y-4\">\r\n\r\n              <View className = \"w-[75%] h-[15%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Enter your Email\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={email}\r\n                  onChangeText={setEmail}\r\n                />\r\n              </View>\r\n\r\n              <View className = \"w-[50%] h-[10%] bg-sky-400/50 border-2 border-white rounded-full justify-center\">\r\n                <TouchableOpacity className = \"h-full w-full justify-center\" onPress={handlePasswordReset}> \r\n                  <Text className = \"text-white text-xl text-center\">Send Instructions</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              {emailSent ? <Text className = \"text-center text-white text-2xl\">Please check your email for instructions on resetting your password.</Text> : null}\r\n            </View>\r\n\r\n            <View className = \"h-[30%] w-full items-center\">\r\n\r\n              <View className = \"w-[25%] h-[20%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity className = \"h-full w-full justify-center\" onPress={navigateToSignIn}> \r\n                  <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst BusinessContext = createContext();\r\n\r\nexport const useBusinessContext = () => {\r\n  return useContext(BusinessContext);\r\n};\r\n\r\nexport const BusinessProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [businessName, setBusinessName] = useState(null);\r\n  const [currentUsers, setCurrentUsers] = useState(null);\r\n  const [userAmount, setUserAmount] = useState(null);\r\n  const [credits, setCredits] = useState(null);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [formattedBillingCycleEnd, setFormattedBillingCycleEndDate] = useState(null);\r\n  const [subscription, setSubscription] = useState(null);\r\n  const [subscriptionCredits, setSubscriptionCredits] = useState(null);\r\n  const [subscriptionProductId, setSubscriptionProductId] = useState(null);\r\n\r\n  const fetchBusinessInfo = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/getBusinessInfo?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n      const { businessName, currentUsers, userAmount, credits, billingCycleEnd, subscription, subscriptionProductId, subscriptionCredits  } = data.businessInfo;\r\n      setBusinessName(businessName);\r\n      setCurrentUsers(currentUsers);\r\n      setUserAmount(userAmount);\r\n      setCredits(credits);\r\n\r\n      const billingCycleEndTimestamp = billingCycleEnd;\r\n      const billingCycleEndDate = new Date(billingCycleEndTimestamp._seconds * 1000);\r\n      const month = (billingCycleEndDate.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = billingCycleEndDate.getDate().toString().padStart(2, '0');\r\n      const year = billingCycleEndDate.getFullYear();\r\n      setFormattedBillingCycleEndDate(`${month}/${day}/${year}`);\r\n\r\n      setSubscription(subscription);\r\n      setSubscriptionCredits(subscriptionCredits);\r\n      setSubscriptionProductId(subscriptionProductId);\r\n    } catch (error) {\r\n      console.error('Error fetching account type:', error);\r\n    }\r\n  };\r\n\r\n  const fetchProfiles = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/getProfiles?profileOwner=${profileOwner}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error!`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/updateprofile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: updatedProfile.email,\r\n          updatedProfileData: updatedProfile\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile updated successfully!');\r\n        const updatedProfiles = profiles.map(profile =>\r\n          profile.email === updatedProfile.email ? updatedProfile : profile\r\n        );\r\n        setProfiles(updatedProfiles);\r\n        setSelectedProfile(updatedProfile);\r\n      } else {\r\n        console.error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProfile = async (profileId) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/deleteprofile`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: profileId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile deleted successfully!');\r\n        const updatedProfiles = profiles.filter(profile => profile.profileId !== profileId);\r\n        setProfiles(updatedProfiles);\r\n        if (selectedProfile && selectedProfile.profileId === profileId) {\r\n          setSelectedProfile(null);\r\n        }\r\n      } else {\r\n        console.error('Failed to delete profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  const giveProfileCredits = async (selectedProfile, amount) => {\r\n\r\n    if (credits < amount) {\r\n      console.log('Not enough credits to perform the operation.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/giveProfileCredits`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: selectedProfile.email,\r\n          amount: amount,\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n\r\n        setCredits(data.businessCredits);\r\n        setProfiles(prevProfiles => {\r\n          return prevProfiles.map(profile =>\r\n            profile.email === selectedProfile.email\r\n              ? { ...profile, credits: data.userCredits }\r\n              : profile\r\n          );\r\n        });\r\n        setSelectedProfile(prevProfile => ({\r\n          ...prevProfile,\r\n          credits: data.userCredits,\r\n        }));\r\n        \r\n      } else {\r\n        console.error('Failed to give profile credits.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding credits to profile:', error);\r\n    }\r\n  };\r\n\r\n  const removeProfileCredits = async (selectedProfile, amount) => {\r\n\r\n    if (selectedProfile.credits < amount) {\r\n      console.log('Not enough credits to perform the operation.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/removeProfileCredits`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: selectedProfile.email,\r\n          amount: amount,\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        \r\n        setCredits(data.businessCredits);\r\n        setProfiles(prevProfiles => {\r\n          return prevProfiles.map(profile =>\r\n            profile.email === selectedProfile.email\r\n              ? { ...profile, credits: data.userCredits }\r\n              : profile\r\n          );\r\n        });\r\n        setSelectedProfile(prevProfile => ({\r\n          ...prevProfile,\r\n          credits: data.userCredits,\r\n        }));\r\n      } else {\r\n        console.error('Failed to remove profile credits.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing credits from profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleGiveAllCredits = async () => {\r\n\r\n    if (credits < profiles.length) {\r\n      console.log('Not enough credits to perform the operation.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/giveAllCredits`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const updatedCredits = data.updatedCredits;\r\n        const updatedProfiles = data.updatedProfiles;\r\n\r\n        setCredits(updatedCredits);\r\n        setProfiles(updatedProfiles);\r\n      } else {\r\n        console.error('Failed to update credits:.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating credits:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveAllCredits = async () => {\r\n\r\n    const hasProfileWithCredits = profiles.some((profile) => profile.credits > 0);\r\n    if (!hasProfileWithCredits) {\r\n      console.log('No profiles with credits greater than 0 to perform the operation.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/business/removeAllCredits`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const updatedCredits = data.updatedCredits;\r\n        const updatedProfiles = data.updatedProfiles;\r\n\r\n        setCredits(updatedCredits);\r\n        setProfiles(updatedProfiles);\r\n      } else {\r\n        console.error('Failed to update credits');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating credits:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchBusinessInfo(profileOwner);\r\n        const profilesData = await fetchProfiles(profileOwner);\r\n        setProfiles(profilesData.profiles);\r\n      } catch (error) {\r\n        console.error('Error fetching account data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <BusinessContext.Provider \r\n      value={{ \r\n          businessName,\r\n          currentUsers,\r\n          userAmount,\r\n          credits,\r\n          profileOwner,\r\n          serverURL,\r\n          profiles,\r\n          setProfiles,\r\n          selectedProfile,\r\n          setSelectedProfile,\r\n          updateProfile,\r\n          deleteProfile,\r\n          giveProfileCredits,\r\n          removeProfileCredits,\r\n          handleGiveAllCredits,\r\n          handleRemoveAllCredits,\r\n          formattedBillingCycleEnd,\r\n          subscription,\r\n          subscriptionProductId,\r\n          subscriptionCredits,\r\n        }}>\r\n      {children}\r\n    </BusinessContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nexport const UserProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [businessName, setBusinessName] = useState(null);\r\n  const [userCredits, setUserCredits] = useState(null);\r\n  const [profession, setProfession] = useState();\r\n  const [isBusiness, setIsBusiness] = useState(null);\r\n  const [formattedBillingCycleEnd, setFormattedBillingCycleEndDate] = useState(null);\r\n  const [subscription, setSubscription] = useState(null);\r\n  const [subscriptionCredits, setSubscriptionCredits] = useState(null);\r\n  const [subscriptionProductId, setSubscriptionProductId] = useState(null);\r\n\r\n  const fetchUserInfo = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/user/getUserInfo?profileOwner=${profileOwner}`);\r\n      const data = await response.json();\r\n  \r\n      if ('businessName' in data.userInfo) {\r\n        const { businessName, credits, profession, isBusiness } = data.userInfo;\r\n        setBusinessName(businessName);\r\n        setUserCredits(credits);\r\n        setProfession(profession);\r\n        setIsBusiness(isBusiness);\r\n\r\n      } else {\r\n        const { credits, profession, isBusiness, billingCycleEnd, subscription, subscriptionProductId, subscriptionCredits } = data.userInfo;\r\n        setUserCredits(credits);\r\n        setProfession(profession);\r\n        setIsBusiness(isBusiness);\r\n\r\n        const billingCycleEndTimestamp = billingCycleEnd;\r\n        const billingCycleEndDate = new Date(billingCycleEndTimestamp._seconds * 1000);\r\n        const month = (billingCycleEndDate.getMonth() + 1).toString().padStart(2, '0');\r\n        const day = billingCycleEndDate.getDate().toString().padStart(2, '0');\r\n        const year = billingCycleEndDate.getFullYear();\r\n        setFormattedBillingCycleEndDate(`${month}/${day}/${year}`);\r\n\r\n        setSubscription(subscription);\r\n        setSubscriptionCredits(subscriptionCredits);\r\n        setSubscriptionProductId(subscriptionProductId);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetchUserInfo(profileOwner);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <UserContext.Provider \r\n      value={{ \r\n          businessName,\r\n          userCredits,\r\n          setUserCredits,\r\n          profession,\r\n          isBusiness,\r\n          profileOwner,\r\n          serverURL,\r\n          formattedBillingCycleEnd,\r\n          subscription,\r\n          subscriptionProductId,\r\n          subscriptionCredits,\r\n        }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React, {useState} from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, } from 'react-native';\r\nimport { signOut } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { useBusinessContext } from '../../components/BusinessContext';\r\nimport Modal from 'react-native-modal';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst DeleteProfileModal = ({ isVisible, onCancel, onDelete }) => {\r\n  return (\r\n    <Modal isVisible={isVisible} transparent={false}>\r\n      <View className = \"h-[75%] w-[75%] bg-white justify-center items-center self-center space-y-8\">\r\n\r\n        <Text className = \"text-black text-center text-base\">Are you sure you want to delete your profile? This action cannot be undone.</Text>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onCancel}>\r\n            <Text className = \"text-black text-center text-base\">Cancel</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 bg-red-500 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onDelete}>\r\n            <Text className = \"text-white text-center text-base\">Delete</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ViewBusiness = () => {\r\n  const { profiles, \r\n    selectedProfile, \r\n    setSelectedProfile, \r\n    updateProfile, \r\n    deleteProfile, \r\n    businessName, \r\n    currentUsers, \r\n    userAmount, \r\n    credits, \r\n    giveProfileCredits,\r\n    removeProfileCredits,\r\n    handleGiveAllCredits,\r\n    handleRemoveAllCredits,\r\n  } = useBusinessContext();\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [creditAmount, setCreditAmount] = useState(0);\r\n  const [search, setSearch] = useState('');\r\n  const [filteredProfiles, setFilteredProfiles] = useState(profiles);\r\n  const dataToRender = search ? filteredProfiles : profiles;\r\n  const [showCredits, setShowCredits] = useState(false);\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleDeleteProfile = async () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      await updateProfile(selectedProfile);\r\n      console.log('Profile updated successfully:', selectedProfile);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    try {\r\n      await deleteProfile(selectedProfile.email);\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleSearch = (text) => {\r\n    setSearch(text);\r\n\r\n    const filtered = profiles.filter((profile) => {\r\n      const fullName = `${profile.firstName} ${profile.lastName}`;\r\n      return fullName.toLowerCase().includes(text.toLowerCase()) || profile.email.toLowerCase().includes(text.toLowerCase());\r\n    });\r\n\r\n    setFilteredProfiles(filtered);\r\n  };\r\n\r\n  const handleProfessionToggle = async () => {\r\n    setSelectedProfile(prevProfile => ({\r\n      ...prevProfile,\r\n      profession: prevProfile.profession === 'Host Home' ? 'Therapist' : 'Host Home',\r\n    }));\r\n  };  \r\n\r\n  const handleCreditChange = (newCreditValue) => {\r\n    const maxCreditsAllowed = Math.max(selectedProfile.credits, credits);\r\n    const finalCreditValue = Math.min(newCreditValue, maxCreditsAllowed);\r\n    setCreditAmount(finalCreditValue);\r\n  };\r\n  \r\n  const handleGiveCredits = async () => {\r\n    try {\r\n      await giveProfileCredits(selectedProfile, creditAmount);\r\n      setCreditAmount(0);\r\n    } catch (error) {\r\n      console.error('Error giving credits:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveCredits = async () => {\r\n    try {\r\n      await removeProfileCredits(selectedProfile, creditAmount);\r\n      setCreditAmount(0);\r\n    } catch (error) {\r\n      console.error('Error removing credits:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreditsToggle = () => {\r\n    setShowCredits(prevShowCredits => !prevShowCredits);\r\n  }; \r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[5%]\"/>\r\n\r\n          {/* Header */}\r\n          <View className = \"h-[10%] flex-row mx-4 justify-center items-center\">\r\n            <View className = \"w-[40%]\">\r\n              <Text className = \"text-center text-white font-bold text-xl\">{businessName}</Text>\r\n            </View>\r\n\r\n            <View className = \"absolute right-0 w-[25%] max-w-[100] bg-white border border-black rounded-full\">\r\n              <TouchableOpacity onPress={handleSignOut}> \r\n                <Text className = \"text-black text-base text-center\">Sign Out</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n\r\n          {/* Business Info */}\r\n          <View className = \"h-[10%] bg-white w-[75%] self-center border border-black\">\r\n\r\n            <Text className = \"text-center text-black text-xl\">Credits: {credits}</Text>\r\n\r\n            <View className = \"flex-row h-[50%] w-full justify-evenly items-center\">\r\n\r\n              <View className = \"w-[30%] h-[75%] bg-green-500 border-2 border-black rounded-full\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGiveAllCredits}>\r\n                  <Text className = \"text-white text-xl text-center\">Split</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View className = \"w-[30%] h-[75%] bg-red-500 border-2 border-black rounded-full\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleRemoveAllCredits}>\r\n                  <Text className = \"text-white text-xl text-center\">Remove</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n          \r\n          </View>\r\n\r\n          {/* Select Profile Container */}\r\n          <View className = \"h-[20%] space-y-2\">\r\n            <Text className = \"text-center text-white font-bold text-xl\">Select a Profile: ({currentUsers} / {userAmount})</Text>\r\n\r\n            <TextInput\r\n              className = \"text-center text-black bg-white w-[75%] self-center border border-black\"\r\n              placeholder=\"Search profiles\"\r\n              onChangeText={handleSearch}\r\n              value={search}\r\n            />\r\n\r\n            <View className = \"h-[50%] w-[75%] self-center border border-black\">\r\n              <ScrollView>\r\n                {dataToRender.map((item, index) => (\r\n                  <View key={index} className = \"h-[35] w-full bg-white border border-black justify-center self-center px-2\">\r\n                    <TouchableOpacity\r\n                      key={index}\r\n                      onPress={() => handleProfileSelect(item)}\r\n                    >\r\n                      <Text key={index} className = \"text-base text-black\">{item.firstName}, {item.lastName} ({item.credits})</Text>\r\n                    </TouchableOpacity> \r\n                  </View>\r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n          </View>\r\n\r\n          {selectedProfile && (\r\n          <View className = \"h-[55%]\">\r\n\r\n            <DeleteProfileModal\r\n              isVisible={isModalVisible}\r\n              onCancel={handleCancel}\r\n              onDelete={handleConfirmDelete}\r\n            />\r\n\r\n            {/* Basic Info*/}\r\n            <View className = \"h-[35%] w-[75%] self-center justify-center bg-white border border-black\">\r\n\r\n              <Text className = \"text-black text-base mx-2 \">Name: {selectedProfile.firstName} {selectedProfile.lastName}</Text>\r\n              <Text className = \"text-black text-base mx-2\">Email: {selectedProfile.email}</Text>\r\n              <TouchableOpacity onPress={handleProfessionToggle}> \r\n                <Text className = \"text-black text-base mx-2\">Profession: {selectedProfile.profession}</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={handleCreditsToggle}> \r\n                <Text className = \"text-black text-base mx-2\">Credits: {selectedProfile.credits}</Text>\r\n              </TouchableOpacity>\r\n              <Text className = \"text-black text-base mx-2\">Total Notes: {selectedProfile.totalNotes}</Text>\r\n\r\n            </View>\r\n\r\n            {/* Credits */}\r\n            {showCredits && (\r\n            <View className = \"h-[30%] w-[75%] self-center bg-white justify-center items-center border border-black\">\r\n              <Text className = \"text-black text-xl text-center\">Credits:</Text>\r\n\r\n              <View className = \"w-[75%] h-[20%] bg-white rounded-full justify-center border border-black\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Amount\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={creditAmount.toString()}\r\n                  onChangeText={(text) => handleCreditChange(parseInt(text, 10))}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n              <View className = \"flex-row justify-evenly w-full h-[60%]\">\r\n                <View className=\"w-[30%] h-[40%] bg-green-500 border-2 border-black rounded-full justify-center items-center self-center\">\r\n                  <TouchableOpacity className=\"w-full h-full justify-center\" onPress={handleGiveCredits}>\r\n                    <Text className=\"text-white text-xl text-center\">Add</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className=\"w-[30%] h-[40%] bg-red-500 border-2 border-black rounded-full justify-center items-center self-center\">\r\n                  <TouchableOpacity className=\"w-full h-full justify-center\" onPress={handleRemoveCredits}>\r\n                    <Text className=\"text-white text-xl text-center\">Remove</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            )}\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[30%] w-[75%] self-center justify-center space-y-4\">\r\n              <View className = \"flex-row h-[50%] justify-evenly items-center\">\r\n\r\n                <View className = \"w-[40%] h-[75%] bg-sky-500 border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleUpdateProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Update</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[75%] bg-red-500 border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleDeleteProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                \r\n              </View>\r\n\r\n              <View className = \"w-[40%] h-[30%] bg-white border-2 border-white rounded-full justify-center items-center self-center\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile(null)}>\r\n                  <Text className = \"text-black text-xl text-center\">Cancel</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            \r\n          </View>)}\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ViewBusiness;","import React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\nimport { useServerContext } from '../../components/ServerContext';\r\nimport { useBusinessContext } from '../../components/BusinessContext';\r\n\r\nconst BusinessPurchaseScreen = () => {\r\n  const { subscription, formattedBillingCycleEnd, subscriptionCredits, subscriptionProductId} = useBusinessContext();\r\n  const { profileOwner } = useServerContext();\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [creditPrice, setCreditPrice] = useState(2.99);\r\n\r\n  const handlePurchase = async (productTitle) => {\r\n    try {\r\n\r\n      if ((productTitle === 'Credits1' && quantity === 0) || (productTitle !== 'Credits1' && subscriptionProductId === 'default')) {\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${serverURL}/common/checkout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          profileOwner: profileOwner,\r\n          quantity: quantity,\r\n          productTitle: productTitle,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        navigation.navigate('StripeCheckout', { checkoutUrl: data.url });\r\n      } else {\r\n        console.log('Unable to connect to stripe.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during checkout:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToGenerate = async () => {\r\n    navigation.navigate('View');\r\n  };  \r\n\r\n  const handleInputChange = (text) => {\r\n    if (/^\\d+$/.test(text)) {\r\n      setQuantity(text);\r\n      calculatePrice(text);\r\n    } else {\r\n      setQuantity('');\r\n      setPrice(0);\r\n    }\r\n  };\r\n\r\n  const calculatePrice = (text) => {\r\n    const parsedQuantity = parseInt(text, 10);\r\n    const calculatedPrice = parsedQuantity * creditPrice;\r\n    setPrice(calculatedPrice);\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"w-full h-full justify-center items-center space-y-2\">\r\n\r\n            {/* Header */}\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[10%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-2xl font-bold text-center\">Subscriptions (30 days)</Text>\r\n\r\n            </View>\r\n\r\n            {/*Sub Info*/}\r\n            <View className = \"h-[15%] w-[80%]\">\r\n\r\n                <View className = \"w-full h-full justify-evenly\">\r\n                  {subscription === 'active' ? (\r\n                    <>\r\n                      <View className = \"flex-row justify-center items-center w-full h-[40%] border-2 border-black bg-white rounded-lg\"> \r\n                        <Text className = \"w-[60%] text-black text-base text-center\">Next Payment: {formattedBillingCycleEnd}</Text>\r\n                        <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: {subscriptionCredits}</Text>\r\n                        <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                      </View>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <TouchableOpacity className = \"w-full h-[40%]\" onPress={() => handlePurchase('default')}>\r\n                        <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                          <Text className = \"w-[60%] text-black text-base text-center\">contact us</Text>\r\n                          <Text className = \"w-[20%] text-black text-base text-center\">price</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </>\r\n                  )}\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%]\">\r\n                  \r\n              <Text className = \"text-white text-2xl font-bold text-center\">Contact Us:</Text>\r\n              <Text className = \"text-white text-2xl font-bold text-center\">easyetchcontact@gmail.com</Text>\r\n                    \r\n            </View>\r\n\r\n            <Text className = \"text-white text-2xl font-bold text-center\">1 Credit = 1 Note</Text>\r\n            <Text className = \"text-white text-2xl font-bold text-center\">{creditPrice}</Text>\r\n\r\n            {/* Credits */}\r\n            <View className = \"h-[40%] w-full items-center\">\r\n\r\n              <View className = \"w-[75%] h-[50%]\">\r\n                <View className = \"flex-row w-full h-[50%] justify-center items-center bg-white border-black border-2\">\r\n\r\n                  <Text className = \"w-[30%] text-black text-base text-center\">Buy Credits?</Text>\r\n\r\n                  <TextInput className = \"w-[40%] h-full border-2 border-black/10 text-center\"\r\n                    keyboardType=\"numeric\"\r\n                    placeholder=\"Enter Amount\"\r\n                    value={quantity}\r\n                    onChangeText={handleInputChange}\r\n                  />\r\n\r\n                  <TouchableOpacity className = \"w-[30%] h-full justify-center items-center\" onPress={() => handlePurchase('Credits1')}>\r\n                    <View className = \"w-[75%] h-[80%] justify-center items-center rounded-2xl bg-green-500\"> \r\n                      <Text className = \"text-black text-base text-center\">${price.toFixed(2)}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BusinessPurchaseScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\n\r\nconst StripeCheckoutScreen = ({ route }) => {\r\n  const { checkoutUrl } = route.params;\r\n  const [result, setResult] = useState(null);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    const openBrowserAsync = async () => {\r\n      try {\r\n        let result = await WebBrowser.openBrowserAsync(checkoutUrl);\r\n        setResult(result);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    openBrowserAsync();\r\n    navigation.goBack();\r\n  }, [checkoutUrl]); \r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Text>{result && JSON.stringify(result)}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutScreen;\r\n","import React from 'react';\r\nimport { Image } from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\nimport ViewBusiness from './BusinessScreens/ViewBusiness';\r\nimport BusinessPurchaseScreen from './BusinessScreens/BusinessPurchaseScreen';\r\nimport StripeCheckoutScreen from './CommonScreens/StripeCheckoutScreen';\r\n\r\nconst BusinessNavigator = () => {\r\n  const Stack = createNativeStackNavigator();\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  const BusinessStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"PurchaseBusiness\" component={BusinessPurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  return (\r\n    <Tab.Navigator \r\n      initialRouteName=\"View\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          backgroundColor: 'white',\r\n          borderColor: 'black',\r\n          width: wp(100),\r\n          maxWidth: 1080,\r\n          alignSelf: 'center',\r\n      },\r\n      tabBarIconStyle: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      }}>\r\n\r\n      <Tab.Screen \r\n        name=\"View\" \r\n        component={ViewBusiness} \r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Image\r\n              source={require('../../assets/navicons/user.png')}\r\n              style={{ width: size, height: size, tintColor: color }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen \r\n        name=\"Purchase\" \r\n        component={BusinessStack} \r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Image\r\n              source={require('../../assets/navicons/money.png')}\r\n              style={{ width: size, height: size, tintColor: color }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default BusinessNavigator;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst HostHomeProfileContext = createContext();\r\n\r\nexport const useHostHomeProfileContext = () => {\r\n  return useContext(HostHomeProfileContext);\r\n};\r\n\r\nexport const HostHomeProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [selectedProfile, setSelectedProfile] = useState(null);\r\n  const [note, setNote] = useState(null);\r\n  const [dayProgram, setDayProgram] = useState(false);\r\n\r\n  const fetchProfiles = async (profileOwner) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/profiles?profileOwner=${profileOwner}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching profiles:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createProfile = async (newProfileData) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/createprofile`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner,\r\n          ...newProfileData,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Profile created successfully:', data);\r\n        setProfiles([...profiles, data]);\r\n        setSelectedProfile(data);\r\n      } else {\r\n        console.error('Error creating profile:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating profile:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updatedProfile) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/updateprofile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: updatedProfile.profileId,\r\n          updatedProfileData: updatedProfile\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile updated successfully!');\r\n        const updatedProfiles = profiles.map(profile =>\r\n          profile.profileId === updatedProfile.profileId ? updatedProfile : profile\r\n        );\r\n        setProfiles(updatedProfiles);\r\n        setSelectedProfile(updatedProfile);\r\n      } else {\r\n        console.error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const deleteProfile = async (profileId) => {\r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/deleteprofile`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          profileOwner: profileOwner,\r\n          profileId: profileId\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Profile deleted successfully!');\r\n        const updatedProfiles = profiles.filter(profile => profile.profileId !== profileId);\r\n        setProfiles(updatedProfiles);\r\n        if (selectedProfile && selectedProfile.profileId === profileId) {\r\n          setSelectedProfile(updatedProfiles.length > 0 ? updatedProfiles[0] : null);\r\n        }\r\n      } else {\r\n        console.error('Failed to delete profile');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const profilesData = await fetchProfiles(profileOwner);\r\n        setProfiles(profilesData);\r\n        if (profilesData.length > 0) {\r\n          setSelectedProfile(profilesData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profiles:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [profileOwner]);\r\n\r\n  return (\r\n    <HostHomeProfileContext.Provider \r\n      value={{ \r\n          profileOwner,\r\n          profiles,\r\n          createProfile,\r\n          updateProfile,\r\n          deleteProfile,\r\n          selectedProfile,\r\n          setSelectedProfile,\r\n          note,\r\n          setNote,\r\n          dayProgram,\r\n          setDayProgram,\r\n        }}>\r\n      {children}\r\n    </HostHomeProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { useServerURL } from './ServerURLContext';\r\n\r\nconst TherapistProfileContext = createContext();\r\n\r\nexport const useTherapistProfileContext = () => {\r\n  return useContext(TherapistProfileContext);\r\n};\r\n\r\nexport const TherapistProfileProvider = ({ children, profileOwner }) => {\r\n  const serverURL = useServerURL();\r\n  const [note, setNote] = useState(null);\r\n  const [behavior, setBehavior] = useState('');\r\n  const [intervention, setIntervention] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [plan, setPlan] = useState('');\r\n\r\n  return (\r\n    <TherapistProfileContext.Provider \r\n      value={{ \r\n          note,\r\n          setNote,\r\n          behavior,\r\n          setBehavior,\r\n          intervention,\r\n          setIntervention,\r\n          response,\r\n          setResponse,\r\n          plan,\r\n          setPlan,\r\n        }}>\r\n      {children}\r\n    </TherapistProfileContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, ScrollView } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst CreateHostHomeProfileScreen = () => {\r\n  const { createProfile } = useHostHomeProfileContext();\r\n  const [profileName, setProfileName] = useState('');\r\n  const [profileGender, setProfileGender] = useState('Male');\r\n  const [profileGoals, setProfileGoals] = useState('');\r\n  const [morningMedication, setMorningMedication] = useState(false);\r\n  const [afternoonMedication, setAfternoonMedication] = useState(false);\r\n  const [nightMedication, setNightMedication] = useState(false);\r\n  const [activity, setActivity] = useState('');\r\n  const [activities, setActivities] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  const handleProfileCreation = async () => {\r\n    if (!profileName.trim() || !profileGender.trim() || !profileGoals.trim()) {\r\n      console.error('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    const newProfileData = {\r\n      profileName,\r\n      profileGender,\r\n      profileGoals,\r\n      morningMedication,\r\n      afternoonMedication,\r\n      nightMedication,\r\n      activities,\r\n    };\r\n\r\n    try {\r\n      await createProfile(newProfileData);\r\n\r\n      // Reset Fields\r\n      setProfileName('');\r\n      setProfileGender('Male');\r\n      setProfileGoals('');\r\n      setMorningMedication(false);\r\n      setAfternoonMedication(false);\r\n      setNightMedication(false);\r\n      setActivities([]);\r\n\r\n      navigateToView();\r\n\r\n    } catch (error) {\r\n      console.log('Error creating profile:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (activity.trim()) {\r\n      setActivities(prevActivities => [...prevActivities, activity]);\r\n      setActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (index) => {\r\n    setActivities(prevActivities => prevActivities.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleGenderToggle = () => {\r\n    setProfileGender(prevGender => (prevGender === 'Male' ? 'Female' : 'Male'));\r\n  };\r\n\r\n  const navigateToView = () => {\r\n    navigation.navigate('ViewProfile');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n            \r\n            {/* Title */}\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            {/* Profile Info */}\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n        \r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Name\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setProfileName(text)}\r\n                  value={profileName}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenderToggle}>\r\n                  <Text className = \"text-black text-base text-center\">Gender: {profileGender}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View className = \"w-[75%] h-[25%] bg-white rounded-full justify-center my-2\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Goals\"\r\n                  placeholderTextColor={'gray'}\r\n                  onChangeText={(text) => setProfileGoals(text)}\r\n                  value={profileGoals}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n            </View>\r\n\r\n            {/* Medication */}\r\n            <View className = \"h-[15%] justify-center\">\r\n\r\n              <Text className = \"text-white text-xl text-center\">Medication Time:</Text>\r\n\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n                {morningMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setMorningMedication(!morningMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setMorningMedication(!morningMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {afternoonMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setAfternoonMedication(!afternoonMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setAfternoonMedication(!afternoonMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {nightMedication  ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setNightMedication(!nightMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setNightMedication(!nightMedication)}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%]\">\r\n              <View className = \"flex-row h-[20%] justify-evenly items-center my-2\">\r\n\r\n                <View className = \"w-[60%] h-[100%] bg-white rounded-full\">\r\n                  <TextInput\r\n                    className=\"h-full w-full text-black text-base text-center\"\r\n                    placeholder=\"Add Activity\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setActivity(text)}\r\n                    value={activity}\r\n                    secureTextEntry={false}\r\n                  />\r\n                </View>\r\n                <View className = \"w-[30%] h-[100%] border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleAddActivity}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[70%] bg-white border-2 border-white rounded-2xl py-2 m-4\">\r\n                <FlatList\r\n                  data={activities}\r\n                  renderItem={({ item, index }) => (\r\n                    <ScrollView>\r\n                      <View className = \"flex-row\">\r\n\r\n                        <Text className = \"w-[75%] text-center text-black\">{item}</Text>\r\n\r\n                        <View className = \"w-[25%]\">\r\n                          <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleDeleteActivity(index)}>\r\n                            <Text className = \"text-red-500 text-base text-center\">X</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n\r\n                      </View>\r\n                    </ScrollView>\r\n                  )}\r\n                  keyExtractor={(item, index) => index.toString()}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            {/* Footer */}\r\n            <View className = \"h-[15%] flex-row items-center justify-evenly\">\r\n              <View className = \" h-[50%] w-[30%] bg-green-500 border-2 border-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleProfileCreation}>\r\n                  <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <View className = \" h-[50%] w-[30%] bg-white rounded-full justify-center my-2\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={navigateToView}>\r\n                  <Text className = \"text-black text-xl text-center\">Go back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CreateHostHomeProfileScreen;\r\n","import React, { useState } from 'react'\r\nimport { View, Text, ScrollView, TouchableOpacity, Alert} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useUserContext } from '../../components/UserContext';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Clipboard from 'expo-clipboard';\r\n\r\nconst GenerateHostHomeNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const { profiles, selectedProfile, setSelectedProfile, note, setNote, dayProgram, setDayProgram } = useHostHomeProfileContext();\r\n  const { userCredits, setUserCredits, profileOwner, serverURL, isBusiness } = useUserContext();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleToggleDayProgram = () => {\r\n    setDayProgram(!dayProgram); // Toggle dayProgram value\r\n  };\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const handleCopy = async () => {\r\n    await Clipboard.setStringAsync(note);\r\n    Alert.alert('Note Saved!', 'Your note has been saved to your clipboard!')\r\n  };\r\n\r\n  const handleFinished = () => {\r\n    setNote('');\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n\r\n    if (userCredits === 0) {\r\n      console.error('Error: Please purchase more credits or subscribe to continue.');\r\n      return;\r\n    }\r\n\r\n    if (note) {\r\n      setNote('');\r\n    }\r\n\r\n    //Start Loading\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await fetch(`${serverURL}/hostHome/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedProfile,\r\n          dayProgram,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(data.generatedText);\r\n        setUserCredits(data.remainingCredits);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getCurrentDate = () => {\r\n    const currentDate = new Date();\r\n    const month = currentDate.getMonth() + 1; // Months are zero-based\r\n    const day = currentDate.getDate();\r\n    const year = currentDate.getFullYear();\r\n\r\n    return `${String(month).padStart(2, '0')}/${String(day).padStart(2, '0')}/${year}`;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const formattedDate = getCurrentDate();\r\n      const filename = `${selectedProfile.profileName}_${formattedDate}.txt`;\r\n\r\n      // Create a Blob containing the text\r\n      const blob = new Blob([note], { type: 'text/plain' });\r\n\r\n      // Create a download link and trigger a click event to download the file\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = filename;\r\n      link.click();\r\n    } catch (error) {\r\n      console.error('Error saving file:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[60%] justify-center\">\r\n\r\n              <Text className = \"text-white text-3xl text-center\">Generating Note..</Text>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base text-center\">We accept 07</Text>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (note) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[60%]\">\r\n\r\n              <View className = \"h-[80%] w-[80%] bg-white justify-center self-center p-4\">\r\n\r\n                <ScrollView>\r\n                  <Text className = \"text-black text-base text-center\">{note}</Text>\r\n                </ScrollView>\r\n\r\n              </View>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[30%] items-center\">\r\n                \r\n              <View className = \"flex-row w-full h-[50%] justify-evenly\">\r\n                <View className = \"w-[40%] h-[50%] bg-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleCopy}>\r\n                    <Text className = \"text-white text-xl text-center\">Copy</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleSave}>\r\n                    <Text className = \"text-black text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[50%] w-full justify-center items-center\">\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-white rounded-full\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleFinished}>\r\n                    <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[10%] justify-center\">\r\n\r\n            <Text className = \"text-center text-white\">Select a Profile:</Text>\r\n\r\n            <View className = \"w-[50%] border-2 border-sky-500 bg-white self-center\">\r\n              <Picker\r\n                selectedValue={selectedProfile ? selectedProfile.profileId.toString() : ''}\r\n                onValueChange={(itemValue) => handleProfileSelect(profiles.find(item => item.profileId.toString() === itemValue))}\r\n              >\r\n                {profiles.map((item) => (\r\n                  <Picker.Item\r\n                    key={item.profileId.toString()}\r\n                    label={item.profileName}\r\n                    value={item.profileId.toString()}\r\n                  />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {selectedProfile && (\r\n          <View className = \"h-[90%] w-[75%] justify-center self-center\">\r\n\r\n            <View className = \"h-[15%] space-y-1\">\r\n              <Text className = \"text-white text-xl font-bold text-center\">Goals:</Text>\r\n              <View className = \"h-[50%] w-[75%] bg-white justify-center self-center rounded-full\">\r\n                <Text className = \"text-black text-center text-base\">{selectedProfile.profileGoals}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            {/* Basic Info*/}\r\n            <View className = \"h-[15%] space-y-1\">\r\n\r\n              <Text className = \"text-white text-xl font-bold text-center pt-2\">Medication Time:</Text>\r\n\r\n              <View className = \" bg-white m-4 p-2 justify-center rounded-2xl\">\r\n                <Text className = \"text-black\">-Morning: {selectedProfile.morningMedication ? 'Yes' : 'No'} </Text>\r\n                <Text className = \"text-black\">-Afternoon: {selectedProfile.afternoonMedication ? 'Yes' : 'No'} </Text>\r\n                <Text className = \"text-black\">-Night: {selectedProfile.nightMedication ? 'Yes' : 'No'} </Text>\r\n              </View>\r\n                \r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%] space-y-1 pt-8\">\r\n\r\n              <Text className = \"text-white text-xl font-bold text-center\">Activities:</Text>\r\n\r\n              <View className = \"h-[40%] m-4 p-2 bg-white rounded-2xl\">\r\n                <ScrollView>\r\n                  {selectedProfile.activities.map((item, index) => (\r\n                    <Text key={index} className = \"text-black text-transform: capitalize\">\r\n                      -{item}\r\n                    </Text>\r\n                  ))}\r\n                </ScrollView>\r\n              </View>\r\n\r\n              <View className = \"w-[60%] h-[30%] bg-white border-2 border-white rounded-full self-center items-center\">\r\n                <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleToggleDayProgram}>\r\n                  <Text className = \"text-black text-xl text-center\">Day Program: {dayProgram ? 'Yes' : 'No'}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[30%]\">\r\n                \r\n              <View className = \"h-full w-full items-center space-y-4\">\r\n              \r\n                <Text className=\"text-white font-bold text-xl\">Credits: {userCredits}</Text>\r\n\r\n                <View className = \"w-[50%] h-[30%] bg-white border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">Generate!</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {!isBusiness && (\r\n                  <TouchableOpacity onPress={navigateToPurchase}>\r\n                    <Text className = \"text-white font-bold text-xl\">Buy Credits?</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>)}\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateHostHomeNotesScreen","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, FlatList, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { useHostHomeProfileContext } from '../../components/HostHomeProfileContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport Modal from 'react-native-modal';\r\n\r\nconst DeleteProfileModal = ({ isVisible, onCancel, onDelete }) => {\r\n  return (\r\n    <Modal isVisible={isVisible} transparent={false}>\r\n      <View className = \"h-[75%] w-[75%] bg-white justify-center items-center self-center space-y-8\">\r\n\r\n        <Text className = \"text-black text-center text-base\">Are you sure you want to delete your profile? This action cannot be undone.</Text>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onCancel}>\r\n            <Text className = \"text-black text-center text-base\">Cancel</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View className = \"h-[20%] w-[40%] border-2 bg-red-500 border-black rounded-2xl justify-center\">\r\n          <TouchableOpacity className = \"h-full w-full justify-center\" onPress={onDelete}>\r\n            <Text className = \"text-white text-center text-base\">Delete</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ViewHostHomeProfileScreen = () => {\r\n  const { profiles, selectedProfile, setSelectedProfile, updateProfile, deleteProfile } = useHostHomeProfileContext();\r\n  const [newActivity, setNewActivity] = useState('');\r\n  const navigation = useNavigation();\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleProfileSelect = (profile) => {\r\n    setSelectedProfile(profile);\r\n  };\r\n\r\n  const handleAddActivity = () => {\r\n    if (newActivity.trim() !== '') {\r\n      setSelectedProfile({ ...selectedProfile, activities: [...selectedProfile.activities, newActivity] });\r\n      setNewActivity('');\r\n    }\r\n  };\r\n\r\n  const handleDeleteActivity = (activity) => {\r\n    const updatedActivities = selectedProfile.activities.filter((item) => item !== activity);\r\n    setSelectedProfile({ ...selectedProfile, activities: updatedActivities });\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    try {\r\n      await updateProfile(selectedProfile);\r\n      console.log('Profile updated successfully:', selectedProfile);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProfile = async () => {\r\n    // Open the modal\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Close the modal\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    // Perform deletion logic\r\n    try {\r\n      await deleteProfile(selectedProfile.profileId);\r\n      // Add any additional logic after successful deletion\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error);\r\n    }\r\n\r\n    // Close the modal\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleGenderToggle = () => {\r\n    setSelectedProfile(prevProfile => ({\r\n      ...prevProfile,\r\n      profileGender: prevProfile.profileGender === 'Male' ? 'Female' : 'Male',\r\n    }));\r\n  };  \r\n\r\n  const navigateToCreate = () => {\r\n    navigation.navigate('CreateProfile');\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[10%] space-y-2\">\r\n\r\n            <View className = \"absolute inset-x-0 bottom-0\">\r\n\r\n              <Text className = \"text-center text-white\">Select a Profile:</Text>\r\n\r\n              <View className = \"flex-row justify-center space-x-2\">\r\n                <View className = \"w-[60%] h-full border-2 border-sky-500 bg-white self-center \">\r\n                  <Picker\r\n                    selectedValue={selectedProfile ? selectedProfile.profileId.toString() : ''}\r\n                    onValueChange={(itemValue) => handleProfileSelect(profiles.find(item => item.profileId.toString() === itemValue))}\r\n                  >\r\n                    {profiles.map((item) => (\r\n                      <Picker.Item\r\n                        key={item.profileId.toString()}\r\n                        label={item.profileName}\r\n                        value={item.profileId.toString()}\r\n                      />\r\n                    ))}\r\n                  </Picker>\r\n                </View>\r\n\r\n                <View className = \"w-[20%] h-[100%] bg-green-500 border-2 border-white rounded-full justify-center\">\r\n                  <TouchableOpacity onPress={navigateToCreate}> \r\n                    <Text className = \"text-white text-base text-center\">Add New</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          {!selectedProfile && (\r\n            <View className = \"h-[85%] justify-center\">\r\n\r\n              <View className = \"items-center\">\r\n                <Text className = \"text-white text-2xl m-2\">Click 'Add New' to create your first profile! </Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n\r\n          {selectedProfile && (\r\n          <View className = \"h-[85%]\">\r\n\r\n            <DeleteProfileModal\r\n              isVisible={isModalVisible}\r\n              onCancel={handleCancel}\r\n              onDelete={handleConfirmDelete}\r\n            />\r\n\r\n            {/* Basic Info*/}\r\n            <View className = \"h-[30%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base\">Name</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Profile Name\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={selectedProfile.profileName}\r\n                  onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileName: text })}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n              <Text className = \"text-white text-base\">Gender</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity onPress={handleGenderToggle}> \r\n                  <Text className = \"text-black text-base text-center\">{selectedProfile.profileGender}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n              <Text className = \"text-white text-base\">Goals</Text>\r\n\r\n              <View className = \"w-[75%] h-[18%] bg-white rounded-full justify-center\">\r\n                <TextInput\r\n                  className=\"h-full w-full text-black text-base text-center self-center\"\r\n                  placeholder=\"Profile Goals\"\r\n                  placeholderTextColor={'gray'}\r\n                  value={selectedProfile.profileGoals}\r\n                  onChangeText={(text) => setSelectedProfile({ ...selectedProfile, profileGoals: text })}\r\n                  secureTextEntry={false}\r\n                />\r\n              </View>\r\n\r\n            </View>\r\n\r\n            {/* Medications */}\r\n            \r\n            <View className = \"h-[20%]\">\r\n              <Text className = \"text-white text-xl text-center\">Medication Time:</Text>\r\n\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n                {selectedProfile.morningMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, morningMedication: !selectedProfile.morningMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, morningMedication: !selectedProfile.morningMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Morning</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {selectedProfile.afternoonMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, afternoonMedication: !selectedProfile.afternoonMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, afternoonMedication: !selectedProfile.afternoonMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Afternoon</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n\r\n                {selectedProfile.nightMedication ? (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-green-500 bg-green-500 rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, nightMedication: !selectedProfile.nightMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ) : (\r\n                  <View className = \"w-[30%] h-[75%] border-2 border-white rounded-full justify-center items-center\">\r\n                    <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => setSelectedProfile({ ...selectedProfile, nightMedication: !selectedProfile.nightMedication })}>\r\n                      <Text className = \"text-white text-xl text-center\">Night</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            {/* Activities */}\r\n            <View className = \"h-[40%]\">\r\n              <View className = \"flex-row h-[20%] justify-evenly items-center my-2\">\r\n\r\n                <View className = \"w-[60%] h-[100%] bg-white rounded-full\">\r\n                  <TextInput\r\n                    className=\"h-full w-full text-black text-base text-center\"\r\n                    placeholder=\"Add Activity\"\r\n                    placeholderTextColor={'gray'}\r\n                    onChangeText={(text) => setNewActivity(text)}\r\n                    value={newActivity}\r\n                    secureTextEntry={false}\r\n                  />\r\n                </View>\r\n                <View className = \"w-[30%] h-[100%] border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleAddActivity}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[60%] bg-white border-2 border-white rounded-2xl py-2 m-4\">\r\n                <FlatList\r\n                  data={selectedProfile.activities}\r\n                  renderItem={({ item, index }) => (\r\n                    <ScrollView>\r\n                      <View className = \"flex-row\">\r\n\r\n                        <Text className = \"w-[75%] text-center text-black\">{item}</Text>\r\n\r\n                        <View className = \"w-[25%]\">\r\n                          <TouchableOpacity className=\"w-full h-full justify-center\" onPress={() => handleDeleteActivity(item)}>\r\n                            <Text className=\"text-red-500 text-base text-center\">X</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n\r\n                      </View>\r\n                    </ScrollView>\r\n                  )}\r\n                  keyExtractor={(item, index) => index.toString()}\r\n                />\r\n              </View>\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[10%]\">\r\n              <View className = \"flex-row h-[70%] justify-evenly items-center\">\r\n\r\n                <View className = \"w-[30%] h-[75%] bg-white/20 border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleUpdateProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Update</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[30%] h-[75%] bg-red-500 border-2 border-red-500 rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleDeleteProfile}>\r\n                    <Text className = \"text-white text-xl text-center\">Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                \r\n              </View>\r\n            </View>\r\n\r\n          </View>)}\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ViewHostHomeProfileScreen;\r\n","import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nconst DispositionContainer = ({ dispositions, selectedDisposition, toggleDisposition }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const filteredDispositions = dispositions.filter(disposition =>\r\n    disposition.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <TextInput\r\n        className=\"bg-white border-gray-400 border-2 max-h-[30%] w-[85%] self-center m-2 text-center\"\r\n        placeholder=\"Search\"\r\n        placeholderTextColor={'gray'}\r\n        onChangeText={setSearchTerm}\r\n        value={searchTerm}\r\n      />\r\n\r\n      <ScrollView>\r\n      {filteredDispositions.map((item, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          style={[\r\n            styles.dispositionButton,\r\n            selectedDisposition === item && styles.selectedDispositionButton\r\n          ]}\r\n          onPress={() => toggleDisposition(item)}\r\n        >\r\n          <Text className=\"text-black\">{item}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DispositionContainer;\r\n\r\nconst styles = {\r\n  dispositionButton: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    margin: 5,\r\n  },\r\n  selectedDispositionButton: {\r\n    backgroundColor: 'lightblue',\r\n  },\r\n};\r\n","import React, { useState } from 'react'\r\nimport { View, Text, ScrollView, TouchableOpacity, Alert} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useUserContext } from '../../components/UserContext';\r\nimport { useTherapistProfileContext } from '../../components/TherapistProfileContext';\r\nimport DispositionContainer from '../../components/DispositionContainer';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Clipboard from 'expo-clipboard';\r\n\r\nconst behaviorDispositions = [\r\n  'Aggressive', 'Angry', 'Bored', 'Bright', 'Calm', 'Confused',\r\n  'Defiant', 'Depressed', 'Disgusted', 'Ecstatic', 'Enraged', 'Exhausted',\r\n  'Flat', 'Frightened', 'Frustrated', 'Happy', 'Lonely', 'Overwhelmed',\r\n  'Playful', 'Sad', 'Shy', 'Subdued', 'Suspicious', 'Talkative'\r\n];\r\n\r\nconst interventionDispositions = [\r\n  'ADHD', 'Anger', 'Anxiety', 'Communication Skills', 'Conduct disorder', 'Depression', 'Drug use', 'Emotional Spirals',\r\n  'Externalizing Behaviors', 'Family Conflicts', 'Grief/Loss Unresolved', 'Identifying Activating Events', 'Impulsivity', 'Internalizing Behaviors ',\r\n  'Low Self-Esteem ', 'Oppositional Defiant Disorder', 'Parenting', 'Positive Qualities Record', 'PTSD', 'Relationship Issues', 'Self Compassion', 'Self-Defeating Behavior',\r\n  'Self-Mutilation', 'Stress', 'Truancy',\r\n];\r\n\r\nconst GenerateTherapistNotesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const {\r\n    note, \r\n    setNote, \r\n    behavior,\r\n    setBehavior,\r\n    intervention,\r\n    setIntervention,\r\n    response,\r\n    setResponse,\r\n    plan,\r\n    setPlan \r\n  } = useTherapistProfileContext();\r\n  const { userCredits, setUserCredits, profileOwner, serverURL, isBusiness } = useUserContext();\r\n  const [selectedBehaviorDispositions, setSelectedBehaviorDispositions] = useState('');\r\n  const [selectedInterventionDispositions, setSelectedInterventionDispositions] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const navigateToPurchase = () => {\r\n    navigation.navigate('Purchase');\r\n  };\r\n\r\n  const toggleBehaviorDisposition = (disposition) => {\r\n    setSelectedBehaviorDispositions(disposition);\r\n  };\r\n  \r\n  const toggleInterventionDisposition = (disposition) => {\r\n    setSelectedInterventionDispositions(disposition);\r\n  };\r\n  \r\n  const handleGenerate = async () => {\r\n    if (selectedBehaviorDispositions.length === 0 || selectedInterventionDispositions.length === 0) {\r\n      console.error('Error: Please select at least one disposition.');\r\n      return;\r\n    }\r\n\r\n    if (userCredits === 0) {\r\n      console.error('Error: Please purchase more credits to continue.');\r\n      return;\r\n    }\r\n\r\n    //Start Loading\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${serverURL}/therapist/generate?profileOwner=${profileOwner}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          selectedBehaviorDispositions,\r\n          selectedInterventionDispositions\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data) {\r\n        setNote(true);\r\n        setBehavior(data.behavior);\r\n        setIntervention(data.intervention);\r\n        setResponse(data.response)\r\n        setPlan(data.plan)\r\n        setUserCredits(data.remainingCredits);\r\n      } else {\r\n        console.error('Error:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending selected profile to server:', error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleCopy = async (text) => {\r\n    await Clipboard.setStringAsync(text);\r\n    Alert.alert('Saved!', 'item has been saved');\r\n  }\r\n\r\n  const getCurrentDate = () => {\r\n    const currentDate = new Date();\r\n    const month = currentDate.getMonth() + 1; // Months are zero-based\r\n    const day = currentDate.getDate();\r\n    const year = currentDate.getFullYear();\r\n\r\n    return `${String(month).padStart(2, '0')}/${String(day).padStart(2, '0')}/${year}`;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const formattedDate = getCurrentDate();\r\n      const filename = `${formattedDate}.txt`;\r\n      const combinedText = `Behavior\\n\\n${behavior}\\n\\nIntervention\\n\\n${intervention}\\n\\nResponse\\n\\n${response}\\n\\nPlan\\n\\n${plan}`;\r\n\r\n      // Create a Blob containing the text\r\n      const blob = new Blob([combinedText], { type: 'text/plain' });\r\n\r\n      // Create a download link and trigger a click event to download the file\r\n      const link = document.createElement('a');\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = filename;\r\n      link.click();\r\n    } catch (error) {\r\n      console.error('Error saving file:', error);\r\n      // Handle error as needed\r\n    }\r\n  };\r\n\r\n  const handleFinished = () => {\r\n    setSelectedBehaviorDispositions('');\r\n    setSelectedInterventionDispositions('');\r\n    setNote(false);\r\n    setBehavior('');\r\n    setIntervention('');\r\n    setResponse('');\r\n    setPlan('');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[20%]\"/>\r\n\r\n            <View className = \"h-[60%] justify-center\">\r\n\r\n              <Text className = \"text-white text-3xl text-center\">Generating Note..</Text>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] justify-center items-center\">\r\n\r\n              <Text className = \"text-white text-base text-center\">We accept 07</Text>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (note) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n  \r\n        {/* Main Container */}\r\n        <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n  \r\n          {/* Background Gradient */}\r\n          <LinearGradient \r\n            className = \"h-full w-full absolute\" \r\n            colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n  \r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[60%]\">\r\n\r\n              <View className = \"h-[80%] w-[80%] bg-white justify-center self-center p-4\">\r\n\r\n                <ScrollView>\r\n                  <View className = \"w-full h-full justify-center items-center my-2 space-y-4\">\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Behavior</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className=\"w-full h-full justify-center\" onPress={() => handleCopy(behavior)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{behavior}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Intervention</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(intervention)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{intervention}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Response</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(response)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{response}</Text>\r\n\r\n                    <View className = \"flex-row space-x-8 justify-center\">\r\n\r\n                      <Text className = \"text-black text-xl text-center font-bold underline\">Plan</Text>\r\n\r\n                      <View className = \"w-[50%] h-[100%] bg-white border-2 border-black rounded-full\">\r\n                        <TouchableOpacity className = \"w-full h-full justify-center\" onPress={() => handleCopy(plan)}>\r\n                          <Text className = \"text-black text-base text-center\">Copy</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n\r\n                    </View>\r\n\r\n                    <Text className = \"text-black text-xl text-center\">{plan}</Text>\r\n\r\n                  </View>\r\n                </ScrollView>\r\n\r\n              </View>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[30%] items-center\">\r\n                \r\n              <View className = \"flex-row w-full h-[50%] justify-evenly\">\r\n                <View className = \"w-[40%] h-[50%] bg-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleSave}>\r\n                    <Text className = \"text-white text-xl text-center\">Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-green-500 rounded-full items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">New</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"h-[50%] w-full justify-center items-center\">\r\n                <View className = \"w-[40%] h-[50%] bg-white border-2 border-white rounded-full\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleFinished}>\r\n                    <Text className = \"text-black text-xl text-center\">Go Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n            </View>\r\n          \r\n          </LinearGradient>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-[100%]\">\r\n\r\n            <View className = \"h-[5%]\"/>\r\n\r\n            <Text className = \"text-white text-xl text-center\">Behavior</Text>\r\n\r\n            <View className = \"h-[25%] w-[50%] space-y-1 self-center\">\r\n\r\n              <DispositionContainer\r\n                dispositions={behaviorDispositions}\r\n                selectedDisposition={selectedBehaviorDispositions}\r\n                toggleDisposition={toggleBehaviorDisposition}\r\n              />\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[5%]\"/>\r\n\r\n            <Text className = \"text-white text-xl text-center\">Intervention</Text>\r\n\r\n            <View className = \"h-[25%] w-[50%] space-y-1 self-center\">\r\n\r\n              <DispositionContainer\r\n                dispositions={interventionDispositions}\r\n                selectedDisposition={selectedInterventionDispositions}\r\n                toggleDisposition={toggleInterventionDisposition}\r\n              />\r\n\r\n            </View>\r\n            \r\n            {/* Footer */}\r\n            <View className = \"h-[30%]\">\r\n                \r\n              <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n                <Text className=\"text-white font-bold text-xl\">Credits: {userCredits}</Text>\r\n\r\n                <View className = \"w-[50%] h-[30%] bg-white border-2 border-white rounded-full justify-center items-center\">\r\n                  <TouchableOpacity className = \"w-full h-full justify-center\" onPress={handleGenerate}>\r\n                    <Text className = \"text-black text-xl text-center\">Generate!</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                \r\n                {!isBusiness && (\r\n                  <TouchableOpacity onPress={navigateToPurchase}>\r\n                    <Text className = \"text-white font-bold text-xl\">Buy Credits?</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </View>\r\n\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GenerateTherapistNotesScreen","import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { signOut } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../../components/FirebaseConfig';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useUserContext } from '../../components/UserContext';\r\n\r\nconst SettingsScreen = () => {\r\n  const { formattedBillingCycleEnd,\r\n    subscription,\r\n    subscriptionCredits,\r\n    businessName,\r\n    profession,\r\n    isBusiness,\r\n  } = useUserContext();\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      const auth = FIREBASE_AUTH;\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"h-full w-full justify-center items-center space-y-4\">\r\n\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            <View className = \"h-[30%] w-[80%]\">\r\n\r\n              {subscription === 'active' && (\r\n                <>\r\n                  <View className = \"bg-white h-full w-full justify-evenly items-center rounded-2xl\">\r\n                    <Text className = \"text-black text-xl\">Status: {subscription}</Text>\r\n                    <Text className = \"text-black text-xl\">Credits per month: {subscriptionCredits}</Text>\r\n                    <Text className = \"text-black text-xl\">End Date: {formattedBillingCycleEnd} </Text>\r\n                  </View>\r\n                </>\r\n              )}\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] w-full justify-center items-center space-y-2\">\r\n\r\n              {isBusiness && (\r\n                <Text className=\"text-white text-xl text-center\">Business: {businessName}</Text>\r\n              )}\r\n\r\n              <Text className = \"text-white text-xl text-center\">Profession: {profession}</Text>\r\n\r\n            </View>\r\n\r\n            <View className = \"h-[20%] w-full items-center\">\r\n              <Text className = \"text-white text-xl text-center\">Contact Us:</Text>\r\n              <Text className = \"text-white text-xl text-center\">Email: easyetchcontact@gmail.com</Text>\r\n            </View>\r\n\r\n            <View className = \"h-[20%] w-full items-center\">\r\n              <View className = \"w-[75%] h-[50%] bg-white rounded-full justify-center\">\r\n                <TouchableOpacity onPress={handleSignOut}> \r\n                  <Text className = \"text-black text-base text-center\">Sign Out</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;\r\n","import React, {useState} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useServerURL } from '../../components/ServerURLContext';\r\nimport { useUserContext } from '../../components/UserContext';\r\nimport { useServerContext } from '../../components/ServerContext';\r\n\r\nconst PurchaseScreen = () => {\r\n  const { profession, subscription, subscriptionCredits } = useUserContext();\r\n  const { profileOwner } = useServerContext();\r\n  const navigation = useNavigation();\r\n  const serverURL = useServerURL();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [creditPrice, setCreditPrice] = useState(1);\r\n\r\n  const handlePurchase = async (productTitle) => {\r\n    try {\r\n\r\n      if ((productTitle === 'Credits1' && quantity === 0)) {\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${serverURL}/common/checkout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          profileOwner: profileOwner,\r\n          quantity: quantity,\r\n          productTitle: productTitle,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        navigation.navigate('StripeCheckout', { checkoutUrl: data.url });\r\n      } else {\r\n        console.log('Unable to connect to stripe.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during checkout:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToGenerate = async () => {\r\n    navigation.goBack();\r\n  };  \r\n\r\n  const handleInputChange = (text) => {\r\n    if (/^\\d+$/.test(text)) {\r\n      setQuantity(text);\r\n      calculatePrice(text);\r\n    } else {\r\n      setQuantity('');\r\n      setPrice(0);\r\n    }\r\n  };\r\n\r\n  const calculatePrice = (text) => {\r\n    const parsedQuantity = parseInt(text, 10);\r\n    const calculatedPrice = parsedQuantity * creditPrice;\r\n    setPrice(calculatedPrice);\r\n  };\r\n\r\n  return (\r\n    <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n          <View className = \"w-full h-full justify-center items-center space-y-2\">\r\n\r\n            {/* Header */}\r\n            <View className = \"h-[10%]\"/>\r\n\r\n            {/*Sub Info*/}\r\n            <View className = \"h-[40%] w-[80%]\">\r\n\r\n              <View className=\"w-full h-full\">\r\n\r\n                <Text className = \"text-white text-2xl font-bold text-center\">Subscriptions (30 days)</Text>\r\n\r\n                {/* Therapist */}\r\n                {profession === \"Therapist\" && (\r\n                  <View className = \"w-full h-full justify-evenly\">\r\n                    {subscription === 'active' ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                          <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: {subscriptionCredits}</Text>\r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('T-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Notes per month: 100</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$50</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n                      </>\r\n                    )}\r\n                  </View>\r\n                )}\r\n\r\n                {/* Host Homes */}\r\n                {profession === \"Host Home\" && (\r\n\r\n                  <View className = \"w-full h-full justify-evenly\">\r\n\r\n                    {subscription === 'active' ? (\r\n                      <>\r\n                        <View className = \"flex-row justify-center items-center w-full h-[20%] border-2 border-black bg-white rounded-lg\"> \r\n                          <Text className = \"w-[60%] text-black text-base text-center\">Unlimited</Text>\r\n                          <Text className = \"w-[20%] text-black text-base text-center\">Owned</Text>\r\n                        </View>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('HH-Tier-1')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Unlimited</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$10/month</Text>\r\n                          </View>\r\n                        </TouchableOpacity>\r\n\r\n                        {/* <TouchableOpacity className = \"w-full h-[20%]\" onPress={() => handlePurchase('HH-Tier-2')}>\r\n                          <View className = \"flex-row justify-center items-center w-full h-full border-2 border-black bg-white rounded-lg\"> \r\n                            <Text className = \"w-[60%] text-black text-base text-center\">Limit: 60 per Day</Text>\r\n                            <Text className = \"w-[20%] text-black text-base text-center\">$20/month</Text>\r\n                          </View>\r\n                        </TouchableOpacity> */}\r\n                      </>\r\n                    )}\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n\r\n            <View className = \"h-[10%]\"/>\r\n            \r\n            <Text className = \"text-white text-2xl font-bold text-center\">Don't want a subscription? Pay as you Go:</Text>\r\n\r\n            {/* Credits */}\r\n            <View className = \"h-[40%] w-full items-center\">\r\n\r\n              <View className = \"w-[75%] h-[50%]\">\r\n                <View className = \"flex-row w-full h-[50%] justify-center items-center bg-white border-black border-2\">\r\n\r\n                  <Text className = \"w-[30%] text-black text-base text-center\">Buy Credits?</Text>\r\n\r\n                  <TextInput className = \"w-[40%] h-full border-2 border-black/10 text-center\"\r\n                    keyboardType=\"numeric\"\r\n                    placeholder=\"Enter Amount\"\r\n                    value={quantity}\r\n                    onChangeText={handleInputChange}\r\n                  />\r\n\r\n                  <TouchableOpacity className = \"w-[30%] h-full justify-center items-center\" onPress={() => handlePurchase('Credits1')}>\r\n                    <View className = \"w-[75%] h-[80%] justify-center items-center rounded-2xl bg-green-500\"> \r\n                      <Text className = \"text-black text-base text-center\">${price.toFixed(2)}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n\r\n              <View className = \"w-[40%] h-[20%] bg-white rounded-full justify-center items-center\">\r\n                <TouchableOpacity className = \"justify-center\" onPress={navigateToGenerate}>\r\n                  <Text className = \" text-black text-base text-center\">Go Back</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n\r\n            </View>\r\n          </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PurchaseScreen;\r\n","import React from 'react';\r\nimport { Image } from 'react-native';\r\nimport { useUserContext } from '../components/UserContext';\r\nimport { HostHomeProfileProvider } from '../components/HostHomeProfileContext'\r\nimport { TherapistProfileProvider } from '../components/TherapistProfileContext'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport CreateHostHomeProfileScreen from './HostHomeScreens/CreateHostHomeProfileScreen'\r\nimport GenerateHostHomeNotesScreen from './HostHomeScreens/GenerateHostHomeNotesScreen'\r\nimport ViewHostHomeProfileScreen from './HostHomeScreens/ViewHostHomeProfileScreen'\r\nimport GenerateTherapistNotesScreen from './TherapistScreens/GenerateTherapistNotesScreen'\r\nimport SettingsScreen from './CommonScreens/SettingsScreen';\r\nimport PurchaseScreen from './CommonScreens/PurchaseScreen'\r\nimport StripeCheckoutScreen from './CommonScreens/StripeCheckoutScreen'\r\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst UserNavigator = () => {\r\n  const { profession, profileOwner } = useUserContext();\r\n\r\n  const Stack = createNativeStackNavigator();\r\n  const Tab = createBottomTabNavigator();\r\n\r\n  const HostHomeStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateHostHome\" component={GenerateHostHomeNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  const TherapistStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"CreateTherapist\" component={GenerateTherapistNotesScreen}/>\r\n        <Stack.Screen name=\"Purchase\" component={PurchaseScreen}/>\r\n        <Stack.Screen name=\"StripeCheckout\" component={StripeCheckoutScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  const HostHomeProfileStack = () => {\r\n    return (\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"ViewProfile\" component={ViewHostHomeProfileScreen}/>\r\n        <Stack.Screen name=\"CreateProfile\" component={CreateHostHomeProfileScreen}/>\r\n      </Stack.Navigator>\r\n     );\r\n  };\r\n\r\n  if (profession === 'Host Home') {\r\n\r\n    return (\r\n      <HostHomeProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator \r\n          initialRouteName=\"Profiles\"\r\n          screenOptions={{\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n              backgroundColor: 'white',\r\n              borderColor: '#34abeb',\r\n              borderWidth: 2,\r\n              width: wp(100),\r\n              maxWidth: 1080,\r\n              alignSelf: 'center',\r\n          },\r\n          tabBarIconStyle: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n            \r\n          }}>\r\n          <Tab.Screen \r\n            name=\"Generate\" \r\n            component={HostHomeStack} \r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/edit.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}/>\r\n          <Tab.Screen \r\n            name=\"Profiles\" \r\n            component={HostHomeProfileStack} \r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/user.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen \r\n            name=\"Settings\" \r\n            component={SettingsScreen}\r\n            options={{\r\n              tabBarIcon: ({ color, size }) => (\r\n                <Image\r\n                  source={require('../../assets/navicons/settings.png')}\r\n                  style={{ width: size, height: size, tintColor: color }}\r\n                />\r\n              ),\r\n            }}/>\r\n        </Tab.Navigator>\r\n      </HostHomeProfileProvider>\r\n    );\r\n\r\n  } else if (profession === 'Therapist') {\r\n\r\n    return (\r\n      <TherapistProfileProvider profileOwner={profileOwner}>\r\n        <Tab.Navigator \r\n          initialRouteName=\"Generate\"\r\n          screenOptions={{\r\n            headerShown: false,\r\n            tabBarStyle: {\r\n              backgroundColor: 'white',\r\n              borderColor: '#34abeb',\r\n              borderWidth: 2,\r\n              backgroundColor: 'white',\r\n              borderColor: 'black',\r\n              width: wp(100),\r\n              maxWidth: 1080,\r\n              alignSelf: 'center',\r\n          },\r\n          tabBarIconStyle: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n            \r\n          }}>\r\n            <Tab.Screen \r\n              name=\"Generate\" \r\n              component={TherapistStack} \r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <Image\r\n                    source={require('../../assets/navicons/edit.png')}\r\n                    style={{ width: size, height: size, tintColor: color }}\r\n                  />\r\n                ),\r\n              }}/>\r\n            <Tab.Screen \r\n              name=\"Settings\" \r\n              component={SettingsScreen} \r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <Image\r\n                    source={require('../../assets/navicons/settings.png')}\r\n                    style={{ width: size, height: size, tintColor: color }}\r\n                  />\r\n                ),\r\n              }}/>\r\n        </Tab.Navigator>\r\n      </TherapistProfileProvider>\r\n    );\r\n  } \r\n  return null;\r\n};\r\n\r\nexport default UserNavigator;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useServerContext } from '../components/ServerContext';\r\nimport { BusinessProvider } from '../components/BusinessContext';\r\nimport { UserProvider } from '../components/UserContext';\r\nimport BusinessNavigator from './BusinessNavigator';\r\nimport UserNavigator from './UserNavigator';\r\n\r\nconst MainNavigator = () => {\r\n  const { accountType, profileOwner } = useServerContext();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (accountType !== null) {\r\n      setLoading(false);\r\n    }\r\n  }, [accountType]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View className = \"bg-white flex-1\">\r\n\r\n      {/* Main Container */}\r\n      <View className = \"h-[100%] w-[100%] max-w-[1080] self-center\">\r\n\r\n        {/* Background Gradient */}\r\n        <LinearGradient \r\n          className = \"h-full w-full absolute\" \r\n          colors={['#88daf7', '#66c4ff', '#008bff']}>\r\n\r\n            <View className = \"h-full w-full justify-center\">\r\n            <Text className = \"text-white text-3xl text-center\">Loading.. Please wait</Text>\r\n            </View>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n    );\r\n  }\r\n\r\n  if (accountType === 'Business') {\r\n\r\n    return (\r\n      <BusinessProvider profileOwner={profileOwner}>\r\n        <BusinessNavigator/>\r\n      </BusinessProvider>\r\n    );\r\n  } else if (accountType === 'User') {\r\n\r\n    return (\r\n      <UserProvider profileOwner={profileOwner}> \r\n        <UserNavigator/>\r\n      </UserProvider>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default MainNavigator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { FIREBASE_AUTH } from '../components/FirebaseConfig';\r\nimport { ServerURLProvider } from '../components/ServerURLContext';\r\nimport { ServerProvider } from '../components/ServerContext';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport SignInScreen from './AuthScreens/SignInScreen';\r\nimport SignUpScreen from './AuthScreens/SignUpScreen';\r\nimport ForgotPasswordScreen from './AuthScreens/ForgotPasswordScreen';\r\nimport MainNavigator from './MainNavigator';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst RootNavigator = () => {\r\n  \r\n  const serverURL = 'https://easyetch.onrender.com';\r\n\r\n  // Production: 'https://easyetch.onrender.com';\r\n  // Testing: 'http://localhost:5000' 10.0.0.70:5000\r\n\r\n  const [profileOwner, setProfileOwner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(FIREBASE_AUTH, async (user) => {\r\n      if (user && user.emailVerified) {\r\n        setProfileOwner(user.email);\r\n      } else {\r\n        setProfileOwner(null);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <ServerURLProvider serverURL={serverURL}> \r\n      <NavigationContainer>\r\n        {profileOwner ? (\r\n        <ServerProvider profileOwner={profileOwner}>\r\n          <MainNavigator />\r\n        </ServerProvider>\r\n        ) : (\r\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\r\n            <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\r\n          </Stack.Navigator>\r\n        )}\r\n      </NavigationContainer>\r\n    </ServerURLProvider>\r\n  );\r\n};\r\n\r\nexport default RootNavigator;\r\n","import { NativeWindStyleSheet } from \"nativewind\";\r\nimport RootNavigator from \"./src/screens/RootNavigator\";\r\n\r\nNativeWindStyleSheet.setOutput({\r\n  default: \"native\",\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <RootNavigator />\r\n  );\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [40], () => (__webpack_require__(5530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FIREBASE_APP","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FIREBASE_AUTH","getAuth","ServerURLContext","createContext","useServerURL","useContext","ServerURLProvider","_ref","children","serverURL","_jsx","Provider","value","ServerContext","useServerContext","ServerProvider","profileOwner","_useState","useState","_useState2","_slicedToArray","accountType","setAccountType","fetchAccountType","_ref2","_asyncToGenerator","response","fetch","data","json","error","console","_x","apply","arguments","useEffect","fetchData","_ref3","navigation","useNavigation","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isPasswordVisible","setIsPasswordVisible","_useState7","_useState8","setError","handleSignIn","auth","signInWithEmailAndPassword","user","emailVerified","signOut","openYoutubeVideo","WebBrowser","openBrowserAsync","_StyledComponent","className","component","View","_jsxs","colors","LinearGradient","source","require","Image","Text","placeholder","placeholderTextColor","onChangeText","text","secureTextEntry","TextInput","TouchableOpacity","style","position","right","top","transform","translateY","onPress","width","height","navigate","_NativeWindStyleSheet","create","styles","_useState9","_useState10","canSignIn","setCanSignIn","_useState11","_useState12","businessType","_useState13","_useState14","userType","setUserType","_useState15","_useState16","workForBusiness","_useState17","_useState18","firstName","setFirstName","_useState19","_useState20","lastName","setLastName","_useState21","_useState22","businessName","setBusinessName","_useState23","_useState24","userAmount","setUserAmount","togglePasswordVisibility","navigateToSignIn","handleSignup","endpoint","requestBody","method","headers","body","JSON","stringify","ok","_yield$response$json$","message","Error","sendEmailVerification","currentUser","_Fragment","atRules","childClasses","emailSent","setEmailSent","handlePasswordReset","sendPasswordResetEmail","BusinessContext","useBusinessContext","BusinessProvider","currentUsers","setCurrentUsers","credits","setCredits","profiles","setProfiles","selectedProfile","setSelectedProfile","formattedBillingCycleEnd","setFormattedBillingCycleEndDate","subscription","setSubscription","subscriptionCredits","setSubscriptionCredits","subscriptionProductId","setSubscriptionProductId","fetchBusinessInfo","_data$businessInfo","businessInfo","billingCycleEnd","billingCycleEndDate","Date","_seconds","month","getMonth","toString","padStart","day","getDate","year","getFullYear","fetchProfiles","_x2","updateProfile","_ref4","updatedProfile","profileId","updatedProfileData","log","updatedProfiles","map","profile","_x3","deleteProfile","_ref5","filter","_x4","giveProfileCredits","_ref6","amount","businessCredits","prevProfiles","_objectSpread","userCredits","prevProfile","_x5","_x6","removeProfileCredits","_ref7","_x7","_x8","handleGiveAllCredits","_ref8","length","updatedCredits","handleRemoveAllCredits","_ref9","some","_ref10","profilesData","UserContext","useUserContext","UserProvider","setUserCredits","profession","setProfession","isBusiness","setIsBusiness","fetchUserInfo","userInfo","_data$userInfo","_data$userInfo2","DeleteProfileModal","isVisible","onCancel","onDelete","Modal","transparent","_useBusinessContext","isModalVisible","setModalVisible","creditAmount","setCreditAmount","search","setSearch","filteredProfiles","setFilteredProfiles","dataToRender","showCredits","setShowCredits","handleSignOut","handleDeleteProfile","handleUpdateProfile","handleConfirmDelete","handleProfessionToggle","handleGiveCredits","handleRemoveCredits","filtered","toLowerCase","includes","ScrollView","item","index","prevShowCredits","totalNotes","newCreditValue","maxCreditsAllowed","Math","max","finalCreditValue","min","handleCreditChange","parseInt","quantity","setQuantity","price","setPrice","creditPrice","handlePurchase","productTitle","url","checkoutUrl","calculatePrice","parsedQuantity","keyboardType","test","toFixed","route","params","result","setResult","goBack","flex","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","Navigator","initialRouteName","screenOptions","headerShown","tabBarStyle","backgroundColor","borderColor","wp","maxWidth","alignSelf","tabBarIconStyle","alignItems","justifyContent","Screen","name","ViewBusiness","options","tabBarIcon","color","size","tintColor","BusinessPurchaseScreen","StripeCheckoutScreen","HostHomeProfileContext","useHostHomeProfileContext","HostHomeProfileProvider","note","setNote","dayProgram","setDayProgram","status","createProfile","newProfileData","concat","_toConsumableArray","TherapistProfileContext","TherapistProfileProvider","behavior","setBehavior","intervention","setIntervention","setResponse","plan","setPlan","profileName","setProfileName","profileGender","setProfileGender","profileGoals","setProfileGoals","morningMedication","setMorningMedication","afternoonMedication","setAfternoonMedication","nightMedication","setNightMedication","activity","setActivity","activities","setActivities","handleProfileCreation","trim","navigateToView","prevGender","prevActivities","FlatList","renderItem","_","i","handleDeleteActivity","keyExtractor","_useHostHomeProfileCo","_useUserContext","loading","setLoading","handleCopy","Clipboard","setStringAsync","Alert","alert","handleGenerate","generatedText","remainingCredits","handleSave","formattedDate","currentDate","String","getCurrentDate","filename","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click","Picker","selectedValue","onValueChange","itemValue","find","Item","label","newActivity","setNewActivity","updatedActivities","dispositions","selectedDisposition","toggleDisposition","searchTerm","setSearchTerm","filteredDispositions","disposition","dispositionButton","selectedDispositionButton","padding","margin","behaviorDispositions","interventionDispositions","_useTherapistProfileC","selectedBehaviorDispositions","setSelectedBehaviorDispositions","selectedInterventionDispositions","setSelectedInterventionDispositions","combinedText","DispositionContainer","navigateToGenerate","borderWidth","GenerateHostHomeNotesScreen","PurchaseScreen","ViewHostHomeProfileScreen","CreateHostHomeProfileScreen","SettingsScreen","GenerateTherapistNotesScreen","_useServerContext","BusinessNavigator","UserNavigator","setProfileOwner","unsubscribe","onAuthStateChanged","NavigationContainer","MainNavigator","SignInScreen","SignUpScreen","ForgotPasswordScreen","App","RootNavigator","NativeWindStyleSheet","setOutput","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}